import{_ as e,n as t,e as r,t as s,K as i,c as a,am as o}from"./shell-2264602c.js";import{s as n}from"./icon-82dd10b4.js";let l=class extends n{constructor(){super(...arguments),this.overlayId="",this._registered=!1}static get styles(){return[s,i(":host {\n  position: relative;\n  z-index: 100;\n}\n")]}async connectedCallback(){super.connectedCallback(),this._registered||(this._registered=!0,await this.updateComplete,this.registerWithOverlayManager())}disconnectedCallback(){super.disconnectedCallback(),this._registered=!1,this.unregisterFromOverlayManager()}registerWithOverlayManager(){this.dispatchEvent(a("register-overlay-display",{display:this}))}unregisterFromOverlayManager(){this.dispatchEvent(a("unregister-overlay-display",{display:this}))}displayOverlay(e,t){this.overlayId=e,this.overlayProperties=t}renderTemplate(){if(!this.overlayId)return"";const e=this.querySelector(`template[slot=${this.overlayId}]`);return e instanceof HTMLTemplateElement?o(e):""}dismissOverlay(){this.overlayId=""}render(){return this.renderTemplate()||""}};e([t({type:String,attribute:"overlay-id"})],l.prototype,"overlayId",void 0),e([t({type:Object})],l.prototype,"overlayProperties",void 0),l=e([r("shreddit-overlay-display")],l);const d=({conversationId:e,position:t,searchQuery:r})=>{const s={conversation_id:e};return t&&(s.query_id=`${t}`),r&&(s.query=r),{search:s}};export{d as g};
