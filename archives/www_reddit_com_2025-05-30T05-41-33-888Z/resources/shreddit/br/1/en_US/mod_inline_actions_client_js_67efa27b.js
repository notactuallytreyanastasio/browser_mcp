import"./mod-log-takedown-preview-client-js-14bc18f8.js";import"./comment-link-post-client-js-3910d5c4.js";import"./select-controller-e11d5e4c.js";import"./community-picker-9f84d972.js";import"./custom-event-7a897666.js";import"./faceplate-tooltip-842394bc.js";import{t,_ as e,n as i,g as s,x as o,c as a,aJ as n,b as r,w as d,e as l,Q as c,ap as h,du as p,T as m,P as u,aq as b,aK as v}from"./shell-2264602c.js";import{s as g,x as A,j as y,I as k,c as f,l as R,aV as S,az as w,y as C,a$ as O,au as P,a_ as $,av as j,a as I,bs as U,C as M,a3 as x,E,bP as B,G as z,aE as L,A as V}from"./icon-82dd10b4.js";import{c as T}from"./content-action-button-a25cd1f9.js";import{au as D}from"./age-gate-standalone-client-js-5357b0cf.js";import{M as F}from"./distinguished-tags-ad178980.js";import{w as H,n as W}from"./modActions-c13cf697.js";import{i as N}from"./mod-actions-controller-7ff911c0.js";import{H as _}from"./community-highlights-4f4bb401.js";import{A as q}from"./mod-bulk-actions-285bd4b9.js";import{C as Q}from"./comment-8177f9ce.js";import{P as J}from"./links-9b598b77.js";import{P as G}from"./overflow-menu-actions-97fa1cfc.js";import{M as K,s as X,a as Y,b as Z,c as tt,d as et,f as it}from"./mod-verdict-47cd849f.js";import"./shreddit-comment-share-button-89112e32.js";import"./shreddit-post-share-button-1df6e2be.js";import{M as st}from"./mod-actions-menu-80ea98a4.js";import{l as ot}from"./expandable-section-header-edd4c2b3.js";import"./all-chats-page-recommendations-client-js-e670f708.js";import"./user-flair-afad799f.js";import"./mod-removal-reason-form-client-js-13da5191.js";import"./faceplate-form-8c3dd0aa.js";import"./filterNullish-60f7e90f.js";import"./faceplate-select-text-input-9feffdd6.js";import"./constants-d65b7b38.js";import"./validate-image-b0892d29.js";import"./text-input-7536667a.js";import"./faceplate-option-cc36e28b.js";import"./header-action-item-chat-client-js-8d009dcd.js";import"./tooltip.base-7152f24f.js";import"./rpl-popper-2d8cefe0.js";import"./chat-mobile-xpromo-client-js-c803f3b0.js";import"./faceplate-progress-6bd32b2b.js";import"./faceplate-textarea-input-97dc2a34.js";import"./smart-escalations-provider-client-js-51cdb3b8.js";import"./community-onboarding-completed-modal-client-js-933a29af.js";import"./hui-user-drawer-client-js-c899bcbc.js";import"./TinyGesture-89d9957c.js";import"./postFlair-707ffbfa.js";import"./click-card-65b67e9d.js";import"./faceplate-hovercard-d2963f31.js";import"./previous-actions-client-js-7310b8fb.js";import"./with-share-1ad32a0e.js";import"./promote-post-actions-controller-f5bf291f.js";import"./utils-19e4b642.js";import"./index-7436fa38.js";import"./profile-creation-1d60123b.js";import"./rpl-coachmark-f5614db3.js";import"./rpl-coachmark-card-3cbe7edc.js";import"./app-selector-client-js-3a92da0e.js";import"./faceplate-bottom-sheet-header-63783c3a.js";import"./mod-dropdown-closer-16ee5434.js";let at=class extends g{constructor(){super(...arguments),this.buttonAppearance="secondary",this.buttonSize=o.Small,this.showFullButtons=!1,this.ariaLabel="",this.thingId="",this.smartEscalationsTracking=!1,this.isLargerThanSmallWindow=!0,this._handleModActionClick=t=>{this.dataModAction===F.AddRemovalReason&&t.stopPropagation(),this.dataModAction&&(this.dispatchEvent(a(this.dataModAction)),t.target&&this.noun&&n(t.target,r({source:"moderator",action:"click",noun:this.noun})))},this.mediaWatcher=null,this.handleMediaChange=t=>{this.isLargerThanSmallWindow=t.matches},this.renderWithTooltip=()=>A`<faceplate-tooltip appearance="inverted" position="top"> ${this.renderButton()} <slot name="text"></slot> </faceplate-tooltip>`,this.renderButton=()=>{const t=D()?T:d,e=this.smartEscalationsTracking?A` <ac-track trigger="click" san="moderator|click|remove" data-faceplate-tracking-context="${JSON.stringify({action_info:{source_name:"smart-escalations"},...this.thingId&&H(this.thingId)&&{post:{id:this.thingId}},...this.thingId&&W(this.thingId)&&{comment:{id:this.thingId}}})}"></ac-track>`:"";return A`${t({appearance:this.buttonAppearance,attributes:{onclick:this._handleModActionClick,className:"relative",slot:"trigger"},size:this.buttonSize,children:this.showFullButtons&&this.isLargerThanSmallWindow?A` <span> ${e} <slot name="text"></slot> </span> `:"",leadingIcon:this.showFullButtons&&this.isLargerThanSmallWindow?"":A` <span class="flex justify-center items-center"> ${e} <slot name="icon"></slot> </span> `,screenReaderContent:this.ariaLabel})}`}}connectedCallback(){super.connectedCallback(),this.showFullButtons&&(this.mediaWatcher=window.matchMedia("(min-width: 768px)"),this.mediaWatcher.addEventListener("change",this.handleMediaChange))}disconnectedCallback(){super.disconnectedCallback(),this.mediaWatcher?.removeEventListener("change",this.handleMediaChange)}render(){return this.showFullButtons?this.renderButton():this.renderWithTooltip()}};at.styles=[t],e([i({type:String,attribute:"data-mod-action"})],at.prototype,"dataModAction",void 0),e([i({type:String,attribute:"event-noun"})],at.prototype,"noun",void 0),e([i({type:String,attribute:"button-appearance"})],at.prototype,"buttonAppearance",void 0),e([i({type:String,attribute:"button-size"})],at.prototype,"buttonSize",void 0),e([i({type:Boolean,attribute:"show-full-buttons"})],at.prototype,"showFullButtons",void 0),e([i({type:String,attribute:"aria-label"})],at.prototype,"ariaLabel",void 0),e([i({type:String,attribute:"thing-id"})],at.prototype,"thingId",void 0),e([i({type:Boolean,attribute:"smart-escalations-tracking"})],at.prototype,"smartEscalationsTracking",void 0),e([s()],at.prototype,"isLargerThanSmallWindow",void 0),at=e([l("mod-action-button")],at);let nt=class extends(c(g)){constructor(){super(...arguments),this.feedViewType=h.ModQueueCompactView,this.viewContext=J.CommentsPage,this.itemState=K.UNMODERATED,this.hasReports=!1,this.isModMode=!1,this.isRemoved=!1,this.isDeleted=!1,this.isLocked=!1,this.isStickied=!1,this.isHighlighted=!1,this.isCurrentUserAuthor=!1,this.hasParent=!1,this.isIconOnly=!1,this.hasRemovalReason=!1,this.permalink="",this.isDesktopViewport=!1,this.isSpamFilteredPost=!1,this.isProfilePost=!1,this.isPromotedPost=!1,this.hasFlairPermissions=!1,this.areHighlightsEnabled=!1,this.hideInlineActions=!1,this.isSmartEscalations=!1,this.moderationState=K.UNMODERATED,this._handleThingUpdate=t=>{let e="";if("awardOnContentId"in t?e=t.awardOnContentId:"commentId"in t?e=t.commentId:"postId"in t&&(e=t.postId),e!==this.thingId)return;const{value:i}=t;switch(t.action){case G.approve:case Q.approve:case q.approve:case Q.approveOptimistic:this.hasRemovalReason=!1,this.isRemoved=!1,this.moderationState=K.APPROVED;break;case G.remove:case G.removeAsSpam:case G.confirmRemoval:case Q.remove:case Q.removeAsSpam:case Q.confirmRemoval:case q.remove:case q.confirmRemoval:case Q.removeOptimistic:case Q.removeAsSpamOptimistic:case Q.confirmRemovalOptimistic:this.isRemoved=!0,this.moderationState=K.REMOVED;break;case G.addRemovalReason:case Q.addRemovalReason:this.hasRemovalReason=!0;break;case G.updateHighlightedPost:this.isHighlighted=i;break;case G.lock:case Q.lock:this.isLocked=i;break;case G.delete:this.isDeleted=i;break;case G.sticky:case Q.sticky:this.isStickied=i}}}get itemType(){return this.thingId?N(this.thingId):null}get isPost(){return this.itemType===p.Post}get isCompactView(){return this.feedViewType===h.CompactView}get isOnModqueuePage(){return this.viewContext===J.ModQueue||this.viewContext===J.ModQueueAll}get isApproved(){return this.moderationState===K.APPROVED}get shouldShowConfirmRemoval(){return X(this.moderationState,this.isSpamFilteredPost)}get shouldShowActionInline(){return Y(this.viewContext,this.feedViewType)&&!this.isIconOnly&&!this.hideInlineActions}get isStickyable(){const t=!(this.viewContext===J.ProfileFeed||this.viewContext===J.ProfileFeed2),e=this.isCurrentUserAuthor&&!this.hasParent;return this.isPost?t:t&&e}get itemTopic(){switch(this.itemType){case p.Award:return m.AwardOnContentUpdated;case p.Comment:return m.CommentUpdated;case p.Post:return m.PostUpdated;default:return null}}connectedCallback(){super.connectedCallback(),this.moderationState=this.itemState,this.itemTopic&&this.subscribe(this.itemTopic,this._handleThingUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.itemTopic&&this.unsubscribe(this.itemTopic,this._handleThingUpdate)}getApproveButtonAppearance(){const t=D()?"bordered":"secondary";return this.isCompactView?t:this.shouldShowConfirmRemoval||this.hasReports?"primary":(this.moderationState,K.REMOVED,t)}renderApproveAction(){return(this.isModMode||this.isOnModqueuePage)&&Z(this.moderationState)?A` <mod-action-button aria-label="Approve content" data-mod-action="${F.ApproveContent}" button-appearance="${this.getApproveButtonAppearance()}" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${y({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text">Approve</span> </mod-action-button> `:null}renderRemoveAction(){return(this.isModMode||this.isOnModqueuePage)&&tt(this.moderationState)?A` <mod-action-button aria-label="Remove content" data-mod-action="${F.RemoveContent}" button-appearance="${D()?"bordered":"secondary"}" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${f({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text"> Remove </span> </mod-action-button> `:null}renderConfirmRemovalAction(){return(this.isModMode||this.isOnModqueuePage)&&this.shouldShowConfirmRemoval?A` <mod-action-button aria-label="Confirm Removal" data-mod-action="${F.ConfirmRemoval}" button-appearance="${D()?"bordered":"secondary"}" ?show-full-buttons="${!this.isIconOnly}" thing-id="${R(this.thingId)}" ?smart-escalations-tracking="${this.isSmartEscalations}"> <span slot="icon" class="flex justify-center">${f({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text"> Confirm Removal </span> </mod-action-button> `:null}renderSpamAction(){return et({moderationState:this.moderationState,isSpamFilteredPost:this.isSpamFilteredPost,isRemoved:this.isRemoved,isPromotedPost:this.isPromotedPost})&&this.shouldShowActionInline?A` <mod-action-button aria-label="Remove content as spam" data-mod-action="${F.RemoveContentAsSpam}" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${S({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text"> Spam </span> </mod-action-button> `:null}renderFlairAction(){return this.isPost&&this.shouldShowActionInline?A` <mod-action-button aria-label="Open post flair modal" data-mod-action="${F.OpenEditPostFlairModal}" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center">${w({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text"> Flair </span> </mod-action-button>`:null}renderAddRemovalReasonAction(){return(this.isModMode||this.isOnModqueuePage)&&this.itemType!==p.Award&&it(this.moderationState,this.hasRemovalReason,this.isSpamFilteredPost,this.isProfilePost)?A` <mod-action-button aria-label="Add removal reason" data-mod-action="${F.AddRemovalReason}" button-appearance="${D()?"bordered":"secondary"}" ?show-full-buttons="${!0}"> <span slot="icon" class="flex justify-center">${C({attributes:{"aria-hidden":"true"},size:k.Small})}</span> <span slot="text"> Add removal reason </span> </mod-action-button> ${this.isIconOnly?A`<div class="separator"></div>`:null} `:null}renderCopyLinkAction(){return this.shouldShowActionInline?this.isPost?A`<shreddit-post-share-button ?use-button="${!0}" ?is-desktop-viewport="${this.isDesktopViewport}" permalink="${this.permalink}" size="${o.Small}" ?show-full-buttons="${!this.isIconOnly}"></shreddit-post-share-button>`:A`<shreddit-comment-share-button slot="comment-share" ?use-button="${!0}" ?is-desktop-viewport="${this.isDesktopViewport}" permalink="${this.permalink}" ?show-full-buttons="${!this.isIconOnly}"></shreddit-comment-share-button>`:null}renderLockAction(){if(!this.shouldShowActionInline||this.isLocked)return null;const t="Lock";return A` <mod-action-button aria-label="${t}" data-mod-action="${F.Lock}" event-noun="lock" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${O({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderUnlockAction(){if(!this.shouldShowActionInline||!this.isLocked)return null;const t="Unlock";return A` <mod-action-button aria-label="${t}" data-mod-action="${F.Unlock}" event-noun="unlock" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${P({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderStickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||this.isStickied||this.areHighlightsEnabled)return null;const t="Sticky";return A` <mod-action-button aria-label="${t}" data-mod-action="${F.Sticky}" event-noun="sticky" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${$({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderUnstickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.isStickied||this.areHighlightsEnabled)return null;const t="Unsticky";return A` <mod-action-button aria-label="${t}" data-mod-action="${F.Unsticky}" event-noun="unsticky" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${j({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderAddToHighlightsAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.areHighlightsEnabled||!_.has(this.viewContext)||this.isHighlighted)return null;const t="Add to highlights";return A` <mod-action-button aria-label="${t}" data-mod-action="${F.UpdateHighlightedPost}" event-noun="highlight" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${$({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}renderRemoveFromHighlightsAction(){if(!(this.isStickyable&&this.shouldShowActionInline&&this.areHighlightsEnabled&&_.has(this.viewContext)&&this.isHighlighted))return null;const t="Remove from highlights";return A` <mod-action-button aria-label="${t}" data-mod-action="${F.RemoveHighlightedPost}" event-noun="unhighlight" button-appearance="plain" ?show-full-buttons="${!this.isIconOnly}"> <span slot="icon" class="flex justify-center"> ${j({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text"> ${t} </span> </mod-action-button>`}render(){return A` ${this.renderAddRemovalReasonAction()} ${this.renderApproveAction()} ${this.renderRemoveAction()} ${this.renderConfirmRemovalAction()} ${this.renderSpamAction()} ${this.renderFlairAction()} ${this.renderLockAction()} ${this.renderUnlockAction()} ${this.renderCopyLinkAction()} ${this.renderStickyAction()} ${this.renderUnstickyAction()} ${this.renderAddToHighlightsAction()} ${this.renderRemoveFromHighlightsAction()} `}};nt.styles=[t,I`:host{display:flex;gap:var(--spacer-xs)}.separator{border-left:1px solid rgb(0,0,0,.1);width:1px;height:32px}`],e([i({type:String,attribute:"thing-id"})],nt.prototype,"thingId",void 0),e([i({type:String,attribute:"feed-view-type"})],nt.prototype,"feedViewType",void 0),e([i({type:String,attribute:"view-context"})],nt.prototype,"viewContext",void 0),e([i({type:String,attribute:"item-state"})],nt.prototype,"itemState",void 0),e([i({type:Boolean,attribute:"has-reports"})],nt.prototype,"hasReports",void 0),e([i({type:Boolean,attribute:"mod-mode"})],nt.prototype,"isModMode",void 0),e([i({type:Boolean,attribute:"removed"})],nt.prototype,"isRemoved",void 0),e([i({type:Boolean,attribute:"deleted"})],nt.prototype,"isDeleted",void 0),e([i({type:Boolean,attribute:"locked"})],nt.prototype,"isLocked",void 0),e([i({type:Boolean,attribute:"stickied"})],nt.prototype,"isStickied",void 0),e([i({type:Boolean,attribute:"highlighted"})],nt.prototype,"isHighlighted",void 0),e([i({type:Boolean,attribute:"current-user-author"})],nt.prototype,"isCurrentUserAuthor",void 0),e([i({type:Boolean,attribute:"has-parent"})],nt.prototype,"hasParent",void 0),e([i({type:Boolean,attribute:"icon-only"})],nt.prototype,"isIconOnly",void 0),e([i({type:Boolean,attribute:"has-removal-reason"})],nt.prototype,"hasRemovalReason",void 0),e([i({type:String,attribute:"permalink"})],nt.prototype,"permalink",void 0),e([i({type:Boolean,attribute:"is-desktop-viewport"})],nt.prototype,"isDesktopViewport",void 0),e([i({type:Boolean,attribute:"is-spam-filtered-post"})],nt.prototype,"isSpamFilteredPost",void 0),e([i({type:Boolean,attribute:"is-profile-post"})],nt.prototype,"isProfilePost",void 0),e([i({type:Boolean,attribute:"is-promoted-post"})],nt.prototype,"isPromotedPost",void 0),e([i({type:Boolean,attribute:"has-flair-permissions"})],nt.prototype,"hasFlairPermissions",void 0),e([i({type:Boolean,attribute:"highlights-enabled"})],nt.prototype,"areHighlightsEnabled",void 0),e([i({type:Boolean,attribute:"hide-inline-actions"})],nt.prototype,"hideInlineActions",void 0),e([i({type:Boolean,attribute:"smart-escalations"})],nt.prototype,"isSmartEscalations",void 0),e([s()],nt.prototype,"moderationState",void 0),nt=e([l("shreddit-mod-inline-actions")],nt);let rt=class extends st{constructor(){super(...arguments),this.hasParent=!1,this.pubsub=new u(this),this.handleCommentUpdate=({commentId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case Q.lock:this.isLocked=Boolean(i);break;case Q.sticky:this.isStickied=Boolean(i);break;case Q.distinguishAsMod:this.distinguishedAs=i?v.Moderator:void 0;break;case Q.distinguishAsAdmin:this.distinguishedAs=i?v.Admin:void 0;break;case Q.approve:case Q.approveOptimistic:this.isRemoved=!1,this.hasRemovalReason=!1,this.verdict=b.ModApproved,this.itemState=K.APPROVED,this.hasReports=!1;break;case Q.remove:case Q.removeAsSpam:case Q.confirmRemoval:case Q.removeOptimistic:case Q.removeAsSpamOptimistic:case Q.confirmRemovalOptimistic:this.isRemoved=!0,this.verdict=b.ModRemoved,this.itemState=K.REMOVED,this.hasReports=!1;break;case Q.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case Q.ignoreReports:this.isReportingIgnored=Boolean(i),i&&(this.isRemoved=!1,this.verdict=b.ModApproved,this.itemState=K.APPROVED)}}}get isStickyable(){return super.isStickyable&&this.isCurrentUserAuthor&&!this.hasParent}connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(m.CommentUpdated,this.handleCommentUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.pubsub.unsubscribe(m.CommentUpdated,this.handleCommentUpdate)}renderActions(){return[this.renderConfirmRemovalAction(),this.renderApproveAction(),this.renderRemoveAction(),this.renderSpamAction(),this.renderIgnoreReportsAction(),this.renderUnignoreReportsAction(),this.renderAddRemovalReasonAction(),this.renderDistinguishAction(),this.renderUndistinguishAction(),this.renderStickyAction("Sticky comment"),this.renderUnstickyAction("Unsticky comment"),this.renderLockAction("Lock comment"),this.renderUnlockAction("Unlock comment"),this.renderCopyLinkAction()]}};e([i({type:Boolean,attribute:"has-parent"})],rt.prototype,"hasParent",void 0),rt=e([l("shreddit-comment-mod-actions-menu")],rt);let dt=class extends st{constructor(){super(...arguments),this.isNsfw=!1,this.isSpoiler=!1,this.isContentLevelModsCommsEnabled=!1,this.pubsub=new u(this),this._handlePostUpdate=({postId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case G.lock:this.isLocked=Boolean(i);break;case G.sticky:this.isStickied=Boolean(i);break;case G.updateHighlightedPost:this.isHighlighted=Boolean(i);break;case G.distinguishAsMod:this.distinguishedAs=i?v.Moderator:void 0;break;case G.approveOptimistic:case G.approve:this.isRemoved=!1,this.hasRemovalReason=!1,this.verdict=b.ModApproved,this.itemState=K.APPROVED,this.hasReports=!1,this.requestUpdate();break;case G.remove:case G.removeAsSpam:case G.confirmRemoval:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.isRemoved=!0,this.verdict=b.ModRemoved,this.itemState=K.REMOVED,this.hasReports=!1;break;case G.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case G.markAsNsfw:this.isNsfw=Boolean(i);break;case G.markAsSpoiler:this.isSpoiler=Boolean(i);break;case G.ignoreReports:this.isReportingIgnored=Boolean(i),i&&(this.isRemoved=!1,this.verdict=b.ModApproved,this.itemState=K.APPROVED)}}}get isStickyable(){return super.isStickyable}connectedCallback(){super.connectedCallback(),this.pubsub.subscribe(m.PostUpdated,this._handlePostUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.pubsub.unsubscribe(m.PostUpdated,this._handlePostUpdate)}renderMarkAsNsfwAction(){return this.isDeleted||this.isNsfw?null:ot({leadingIcon:U(),label:"Add NSFW tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleMarkNsfw)})}renderUnmarkAsNsfwAction(){return this.isDeleted||!this.isNsfw?null:ot({leadingIcon:M(),label:"Remove NSFW tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleUnmarkNsfw)})}renderMarkAsSpoilerAction(){return this.isDeleted||this.isSpoiler?null:ot({leadingIcon:x(),label:"Add spoiler tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleMarkSpoiler)})}renderUnmarkAsSpoilerAction(){return this.isDeleted||!this.isSpoiler?null:ot({leadingIcon:E(),label:"Remove spoiler tag",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleUnmarkSpoiler)})}renderAdjustCrowdControlAction(){return this.isPromotedPost?null:ot({leadingIcon:B(),label:"Adjust crowd control",size:this.size,onClick:this.getListItemClickHandler(this.modActionsController.handleAdjustCrowdControl)})}renderActions(){return[this.renderConfirmRemovalAction(),this.renderApproveAction(),this.renderRemoveAction(),this.renderShareToModChatAction(this.isContentLevelModsCommsEnabled),this.renderSpamAction(),this.renderIgnoreReportsAction(),this.renderUnignoreReportsAction(),this.renderAddRemovalReasonAction(),this.renderDistinguishAction(),this.renderUndistinguishAction(),this.renderStickyAction("Sticky post"),this.renderUnstickyAction("Unsticky post"),this.renderAddToHighlightsAction(),this.renderRemoveFromHighlightsAction(),this.renderLockAction("Lock comments"),this.renderUnlockAction("Unlock comments"),this.renderEditPostFlairAction("Edit post flair"),this.renderMarkAsNsfwAction(),this.renderUnmarkAsNsfwAction(),this.renderMarkAsSpoilerAction(),this.renderUnmarkAsSpoilerAction(),this.renderAdjustCrowdControlAction(),this.renderCopyLinkAction()]}};e([i({type:Boolean,attribute:"nsfw"})],dt.prototype,"isNsfw",void 0),e([i({type:Boolean,attribute:"spoiler"})],dt.prototype,"isSpoiler",void 0),e([i({type:Boolean,attribute:"is-content-level-mods-comms-enabled"})],dt.prototype,"isContentLevelModsCommsEnabled",void 0),dt=e([l("shreddit-post-mod-actions-menu")],dt);const lt=c(g);let ct=class extends lt{constructor(){super(...arguments),this.parentOfModVerdictSlotElementWidth=0,this.removed=!1,this.thingId="",this.shouldIgnoreParentWidth=!1,this.minWidthToShowLabel=460,this.onCommentUpdateAction=t=>{if(t.commentId!==this.thingId)return;const{action:e}=t;switch(e){case Q.approve:case Q.approveOptimistic:this.removed=!1;break;case Q.remove:case Q.removeAsSpam:case Q.confirmRemoval:case Q.removeOptimistic:case Q.removeAsSpamOptimistic:case Q.confirmRemovalOptimistic:this.removed=!0}},this.onPostUpdateAction=t=>{if(t.postId!==this.thingId)return;const{action:e}=t;switch(e){case G.approve:case G.approveOptimistic:this.removed=!1;break;case G.remove:case G.removeAsSpam:case G.confirmRemoval:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.removed=!0}},this.onAwardOnContentUpdateAction=t=>{if(t.awardOnContentId!==this.thingId)return;const{action:e}=t;switch(e){case q.approve:this.removed=!1;break;case q.remove:case q.confirmRemoval:this.removed=!0}}}connectedCallback(){super.connectedCallback(),this.initializeResizeObserver(),this.subscribe(m.PostUpdated,this.onPostUpdateAction),this.subscribe(m.CommentUpdated,this.onCommentUpdateAction),this.subscribe(m.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}disconnectedCallback(){this.cleanupResizeObserver(),super.disconnectedCallback(),this.unsubscribe(m.PostUpdated,this.onPostUpdateAction),this.unsubscribe(m.CommentUpdated,this.onCommentUpdateAction),this.unsubscribe(m.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}initializeResizeObserver(){this.parentOfModVerdictSlotElement=this.closest('[slot="mod-verdict"]')?.parentElement,this.parentOfModVerdictSlotElement&&(this.resizeObserver=new ResizeObserver((t=>{for(const e of t)this.parentOfModVerdictSlotElementWidth=e.contentRect.width})),this.resizeObserver.observe(this.parentOfModVerdictSlotElement))}cleanupResizeObserver(){this.resizeObserver&&this.parentOfModVerdictSlotElement&&this.resizeObserver.unobserve(this.parentOfModVerdictSlotElement)}render(){return A` <span class="inline-flex items-center gap-xs text-12 text-neutral-content w-full"> <div class="relative"> <slot name="verdict-indicator-avatar"></slot> <div aria-hidden="true" class="absolute bottom-0 -right-px flex justify-center items-center h-md w-md rounded-full border-solid border-md border-neutral-background scale-75 origin-bottom-right translate-y-px ${this.removed?"bg-red-200 text-red-700":"bg-kiwigreen-200 text-kiwigreen-700"}"> ${this.removed?L({size:k.ExtraSmall}):z({size:k.ExtraSmall})} </div> </div> ${this.shouldShowLabel?A`<slot name="verdict-indicator-label"></slot>`:""} </span> `}get shouldShowLabel(){return this.shouldIgnoreParentWidth||this.parentOfModVerdictSlotElementWidth>=this.minWidthToShowLabel}};ct.styles=[t],e([s()],ct.prototype,"parentOfModVerdictSlotElementWidth",void 0),e([s()],ct.prototype,"parentOfModVerdictSlotElement",void 0),e([i({type:Boolean,reflect:!0})],ct.prototype,"removed",void 0),e([i({type:String,attribute:"thing-id"})],ct.prototype,"thingId",void 0),e([i({type:Boolean,attribute:"ignore-parent-width"})],ct.prototype,"shouldIgnoreParentWidth",void 0),ct=e([l("mod-verdict-indicator-component")],ct);let ht=class extends g{constructor(){super(...arguments),this.iconOnly=!1,this.pubsub=new u(this),this.handleCommentUpdate=({commentId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case Q.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case Q.approve:case Q.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case Q.remove:case Q.removeAsSpam:case Q.removeOptimistic:case Q.removeAsSpamOptimistic:case Q.confirmRemovalOptimistic:this.hasRemovalReason=!1,this.isRemoved=!0}},this.handlePostUpdate=({postId:t,action:e,value:i})=>{if(t===this.thingId)switch(e){case G.addRemovalReason:this.hasRemovalReason=Boolean(i);break;case G.approve:case G.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case G.remove:case G.removeAsSpam:case G.removeOptimistic:case G.removeAsSpamOptimistic:case G.confirmRemovalOptimistic:this.isRemoved=!0,this.hasRemovalReason=!1}},this.updateModVerdict=t=>{const e=this.closest('[slot="mod-verdict"]');t&&this.isRemoved?e?.setAttribute("show-removal-reason-cta",""):e?.removeAttribute("show-removal-reason-cta")},this.shouldShowCta=()=>{const t=this.isRemoved?K.REMOVED:K.UNMODERATED;return it(t,!!this.hasRemovalReason,!!this.isContentSpamFilteredPost,this.isProfilePost)}}connectedCallback(){super.connectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver=new ResizeObserver((t=>{for(const e of t)e.contentRect.width<500?this.iconOnly=!0:this.iconOnly=!1})),this.resizeObserver.observe(t),this.pubsub.subscribe(m.CommentUpdated,this.handleCommentUpdate),this.pubsub.subscribe(m.PostUpdated,this.handlePostUpdate),this.updateModVerdict(!this.hasRemovalReason)}disconnectedCallback(){super.disconnectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver.unobserve(t),this.resizeObserver.disconnect(),this.pubsub.unsubscribe(m.CommentUpdated,this.handleCommentUpdate),this.pubsub.unsubscribe(m.PostUpdated,this.handlePostUpdate)}updated(t){super.updated(t),t.has("hasRemovalReason")&&this.updateModVerdict(!this.hasRemovalReason)}render(){return this.hasRemovalReason||!this.shouldShowCta()?V:A` <mod-action-button aria-label="Add removal reason" data-mod-action="${F.AddRemovalReason}" button-appearance="secondary" ?show-full-buttons="${!0}"> <span slot="icon" class="flex justify-center"> ${C({attributes:{"aria-hidden":"true"},size:k.Small})} </span> <span slot="text" class="flex"> ${this.iconOnly?C({attributes:{"aria-hidden":"true"},size:k.Small}):"Add removal reason"} </span> </mod-action-button> `}};ht.styles=[t],e([i({type:String,attribute:"thing-id"})],ht.prototype,"thingId",void 0),e([i({type:Boolean,attribute:"has-removal-reason"})],ht.prototype,"hasRemovalReason",void 0),e([s()],ht.prototype,"iconOnly",void 0),e([i({type:Boolean,attribute:"is-removed"})],ht.prototype,"isRemoved",void 0),e([i({type:Boolean,attribute:"is-content-spam-filtered-post"})],ht.prototype,"isContentSpamFilteredPost",void 0),e([i({type:Boolean,attribute:"is-profile-post"})],ht.prototype,"isProfilePost",void 0),ht=e([l("responsive-add-removal-reason-cta")],ht);
