import{Y as e,a as t,bL as a,bM as r,h as s,c as o,I as n,w as i,x as c,t as l,_ as p,n as m,e as h}from"./shell-2264602c.js";import{x as d,O as u,I as g,s as S}from"./icon-82dd10b4.js";import"./reddit-feed-677ff449.js";import"./faceplate-search-input-ad8da225.js";import"./faceplate-tooltip-842394bc.js";import{S as f}from"./search-params-9b432517.js";class C{constructor(){this.partial=null,this.loadAndReplaceContent=async({afterFailure:t,afterSuccess:a,wrapPartialElement:r=e=>e,src:s,target:o})=>{const n=document.createElement("faceplate-partial");n.setAttribute("loading",e.Programmatic),n.setAttribute("src",s),n.setAttribute("class","block min-h-screen xs:min-h-[20rem]");const i=document.createElement("shreddit-loading");n.appendChild(i);const c=this.partial??document.getElementById(o),l=`${c.getBoundingClientRect().height}px`;n.style.minHeight=l,c.insertAdjacentElement("beforebegin",r(n)),c.remove(),this.partial=n;try{const e=new Promise(((e,t)=>{const a=e=>{this.partial!==n&&(e.stopImmediatePropagation(),e.stopPropagation()),t()};n.addEventListener("faceplate-error",a,{once:!0}),n.addEventListener("faceplate-alert",a,{once:!0})}));await Promise.race([e,n.load()]),this.partial=null,a?.()}catch{if(this.partial!==n)return;t?.()}}}}let v=class extends(t(S)){constructor(){super(...arguments),this.target="",this.path="",this.pdpCommentSearchInputSelector=a.pdpCommentSearchInput,this.handleBackNavigation=async()=>{this.showCommentComposer();const e=new URL(location.href);e.searchParams.delete(f.Query),e.searchParams.delete(f.Pane),e.searchParams.delete(f.ConversationId),e.searchParams.delete(f.ImpressionId);const t=new URL(`${location.origin}${this.path}`);history.replaceState({},"",e.toString());const a=t.toString().substring(location.origin.length),i=new URLSearchParams(location.search).get(f.Sort),c=`/svc/shreddit/comments${a}?${new URLSearchParams({"inline-refresh":"true","render-mode":"partial",...i?{sort:i}:{}}).toString()}`;this.replaceContentController.loadAndReplaceContent({src:c,target:this.target,afterSuccess:()=>r(this,{message:"Navigated to all comments successfully",options:{priority:s.assertive}}),afterFailure:()=>this.dispatchEvent(o("faceplate-alert",{level:n.error,cause:"uncategorized",message:"Failed to load the comments."}))})},this.replaceContentController=new C}showCommentComposer(){document.querySelector(this.pdpCommentSearchInputSelector)?.resetSearchInput()}render(){return d` <faceplate-tracker source="post" action="click" noun="view_all_comments"> <faceplate-tooltip appearance="inverted">${i({appearance:"plain",size:c.Small,shape:"pill",attributes:{className:"m-xs border-none","aria-label":"Back",onclick:this.handleBackNavigation,slot:"trigger",type:"button"},children:"All Comments",screenReaderContent:"Show all Comments tree",leadingIcon:u({size:g.Small})})} Navigate to all comments </faceplate-tooltip> </faceplate-tracker>`}};v.styles=[l],p([m({type:String})],v.prototype,"target",void 0),p([m({type:String})],v.prototype,"path",void 0),p([m({type:String,attribute:"pdp-comment-search-input-selector"})],v.prototype,"pdpCommentSearchInputSelector",void 0),v=p([h("pdp-comment-search-close")],v);export{C as R};
