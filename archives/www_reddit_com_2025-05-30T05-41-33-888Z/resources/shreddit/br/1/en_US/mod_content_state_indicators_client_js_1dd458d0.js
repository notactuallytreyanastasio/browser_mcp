import"./faceplate-tooltip-842394bc.js";import{Q as t,T as e,t as s,_ as o,n,e as r,a as i,P as a,w as d,x as c,b as p,I as l,M as u,O as h,a7 as m,c as b}from"./shell-2264602c.js";import{C as g}from"./comment-8177f9ce.js";import{R as z}from"./distinguished-tags-ad178980.js";import{P as y}from"./overflow-menu-actions-97fa1cfc.js";import{o as k,x as I,a as S,s as f,aC as v,I as R,aD as U,l as C}from"./icon-82dd10b4.js";import{l as w}from"./expandable-section-header-edd4c2b3.js";import{i as P}from"./links-9b598b77.js";import"./select-controller-e11d5e4c.js";import"./community-picker-9f84d972.js";import"./mod-dropdown-closer-16ee5434.js";import"./user-flair-afad799f.js";import"./age-gate-standalone-client-js-5357b0cf.js";let j=class extends(t(f)){constructor(){super(...arguments),this.status=z.Reported,this.handlePostUpdate=({postId:t,action:e,value:s})=>{t===this.thingId&&e===y.ignoreReports&&(this.status=s?z.Ignored:z.Dismissed)},this.handleCommentUpdate=({commentId:t,action:e,value:s})=>{t===this.thingId&&e===g.ignoreReports&&(this.status=s?z.Ignored:z.Dismissed)}}connectedCallback(){super.connectedCallback(),this.subscribe(e.PostUpdated,this.handlePostUpdate),this.subscribe(e.CommentUpdated,this.handleCommentUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.unsubscribe(e.PostUpdated,this.handlePostUpdate),this.unsubscribe(e.CommentUpdated,this.handleCommentUpdate)}getStyle(){return k({"--list-icon-color":this.status===z.Reported?"var(--shreddit-color-mods-reported-onBackground)":"var(--color-secondary-onBackground)"})}render(){return this.status===z.Reported?I`<div class="bg-mods-reported-background hover:bg-mods-reported-background-hover" style="${this.getStyle()}"> <slot></slot> </div>`:I`<details class="max-w-fit bg-secondary-background hover:bg-secondary-background-hover" style="${this.getStyle()}"> <summary class="cursor-pointer block list-none" @click="${t=>t.stopPropagation()}"> <slot name="${this.status}"></slot> </summary> <slot></slot> </details>`}};j.styles=[S`summary::-webkit-details-marker{display:none}`,s],o([n({type:String,attribute:"thing-id"})],j.prototype,"thingId",void 0),o([n({type:String})],j.prototype,"status",void 0),j=o([r("reports-summary-wrapper")],j);const x=i(f);let $=class extends x{constructor(){super(...arguments),this.contentId="",this.isSnoozed=!1,this.reportReason="",this.pubsub=new a(this),this.onPostUpdateAction=t=>{if(t.postId!==this.contentId)return;const{action:e}=t;switch(e){case y.snoozeReporter:this.isSnoozed=!0;break;case y.unsnoozeReporter:this.isSnoozed=!1}},this.onCommentUpdateAction=t=>{if(t.commentId!==this.contentId)return;const{action:e}=t;switch(e){case g.snoozeReporter:this.isSnoozed=!0;break;case g.unsnoozeReporter:this.isSnoozed=!1}}}connectedCallback(){super.connectedCallback(),P(this.contentId)?this.pubsub.subscribe(e.PostUpdated,this.onPostUpdateAction):this.pubsub.subscribe(e.CommentUpdated,this.onCommentUpdateAction)}disconnectedCallback(){super.disconnectedCallback(),P(this.contentId)?this.pubsub.unsubscribe(e.PostUpdated,this.onPostUpdateAction):this.pubsub.unsubscribe(e.CommentUpdated,this.onCommentUpdateAction)}renderReportOverflowMenu(){return I` <mod-dropdown-closer> <faceplate-dropdown-menu @click="${t=>t.stopPropagation()}" position="bottom-end"> ${d({appearance:"plain",size:c.ExtraSmall,children:v({size:R.ExtraSmall})})} <faceplate-menu slot="menu"> ${w({label:this.isSnoozed?"Un-snooze reporter":"Snooze reporter",description:this.isSnoozed?"Receive reports from this user again":"Pause reports from this user for 7 days",leadingIcon:U({size:R.Small}),onClick:this.toggleSnooze})} </faceplate-menu> </faceplate-dropdown-menu> </mod-dropdown-closer> `}sendTrackingEvent(t,e,s){const o=s?"snoozereports":"unsnoozereports",n=P(t)?"post":"comment",r=P(t)?t:null,i=P(t)?null:t,a=p({source:"moderator",action:o,noun:n},{...r&&{post:{id:r}},...i&&{comment:{id:i}},...e&&{action_info:{reason:e}}});this.trackEvent(a)}showToast({success:t,isSnoozed:e}){const s=t?e?"Reports from these users will be paused":"Reports from these users will be resumed":"Failed to update reports",o=t?l.info:l.error,n=b("faceplate-alert",{level:o,message:s});this.dispatchEvent(n)}async updateReportState(t){try{const{data:e}=await u({operation:h.UpdateReportState,variables:{input:{itemId:this.contentId,reportText:this.reportReason,isSnoozed:t}}});return e?.updateReport?.ok??!1}catch(t){return!1}}async toggleSnooze(t){const s=!this.isSnoozed;this.sendTrackingEvent(this.contentId,this.reportReason,s);const o=await this.updateReportState(s);o&&(s?P(this.contentId)?this.pubsub.publish(e.PostUpdated,{postId:this.contentId,action:y.snoozeReporter,value:!0}):this.pubsub.publish(e.CommentUpdated,{commentId:this.contentId,action:g.snoozeReporter,value:!0}):P(this.contentId)?this.pubsub.publish(e.PostUpdated,{postId:this.contentId,action:y.unsnoozeReporter,value:!0}):this.pubsub.publish(e.CommentUpdated,{commentId:this.contentId,action:g.unsnoozeReporter,value:!0})),this.showToast({success:o,isSnoozed:this.isSnoozed})}render(){const t={"flex items-center m-0 p-0":!0,"bg-secondary-background":this.isSnoozed};return I`<li class="${m(t)}"> <slot name="${C(this.isSnoozed?"snoozed":void 0)}" class="flex-auto block"></slot> ${this.renderReportOverflowMenu()} </li> `}};$.styles=[s],o([n({type:String,attribute:"content-id"})],$.prototype,"contentId",void 0),o([n({type:Boolean,attribute:"is-snoozed"})],$.prototype,"isSnoozed",void 0),o([n({type:String,attribute:"report-reason"})],$.prototype,"reportReason",void 0),$=o([r("user-report-summary")],$);
