import{_ as e,n as t,m as i,b9 as n,gC as r,e as s}from"./shell-2264602c.js";import{x as l,a}from"./icon-82dd10b4.js";const d=e=>e instanceof HTMLButtonElement||e instanceof HTMLAnchorElement||["button","link","menuitem","tab","checkbox","combobox","gridcell","application","treeitem"].includes(e?.getAttribute("role")??"");class o extends n{constructor(){super(...arguments),this._triggerElement=null,this.keydown=!1,this.dialogId="",this.noModal=!1,this.handleClick=()=>{this.keydown||this.sendActivatedEvent()},this.handleKeydown=e=>{"Enter"===e.key&&(this.keydown=!0)},this.handleKeyup=e=>{"Enter"===e.key&&!0===this.keydown&&(this.keydown=!1,this.sendActivatedEvent())},this.handleBlur=()=>{this.keydown=!1}}set triggerElement(e){const t=this._triggerElement?.getAttribute("aria-expanded")??!1,i=this._triggerElement,n=e;i&&(i?.removeAttribute("aria-haspopup"),i?.removeAttribute("aria-expanded"),i?.removeEventListener("click",this.handleClick),i?.removeEventListener("keydown",this.handleKeydown),i?.removeEventListener("keyup",this.handleKeyup),i?.addEventListener("blur",this.handleBlur)),n&&(this.action!==r.Hide&&(n.setAttribute("aria-haspopup","dialog"),n.setAttribute("aria-expanded",`${t}`)),n.addEventListener("click",this.handleClick),n.addEventListener("keydown",this.handleKeydown),n.addEventListener("keyup",this.handleKeyup),n.addEventListener("blur",this.handleBlur),this._triggerElement=n)}get triggerElement(){return this._triggerElement}attributeChangedCallback(e,t,i){super.attributeChangedCallback(e,t,i),"action"===e&&(this.triggerElement=this._triggerElement)}addOpenAttributes(){this.triggerElement&&this.triggerElement.setAttribute("aria-expanded","true")}removeOpenAttributes(){this.triggerElement&&this.triggerElement.setAttribute("aria-expanded","false")}handleSlotChange(){this.triggerElement=((e,t=5)=>{let i=e??null,n=0;if(d(i))return i;for(;i&&n<t;){if(i=i?.assignedElements?i?.assignedElements()?.[0]??null:i?.children[0]??null,d(i))return i;n++}return null})(this.slottedElements?.[0]??null)}sendActivatedEvent(){if(this.triggerElement?.hasAttribute("disabled"))return;const e={dialogId:this.dialogId,triggerElement:this,noModal:this.noModal,action:this.action};this.emitter.dispatch("trigger-clicked",{bubbles:!0,composed:!0,detail:e})}render(){return l`<slot @slotchange="${this.handleSlotChange}"></slot>`}}e([t({type:String,reflect:!0,attribute:"dialog-id"})],o.prototype,"dialogId",void 0),e([t({type:Boolean,reflect:!0,attribute:"no-modal"})],o.prototype,"noModal",void 0),e([t({type:String,reflect:!0})],o.prototype,"action",void 0),e([i()],o.prototype,"slottedElements",void 0);var h=a`:host{display:contents}`;let g=class extends o{};g.styles=h,g=e([s("rpl-dialog-trigger")],g);
