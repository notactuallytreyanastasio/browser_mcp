import{_ as e,n as t,J as r,e as s,u as o,aQ as a,gw as i,bR as n}from"./shell-2264602c.js";import{s as h,a as l,x as d}from"./icon-82dd10b4.js";var c;!function(e){e.CIRCLE="circle",e.RECTANGLE="rectangle",e.PILL="pill"}(c||(c={}));const m=2500;let p=0,u=null,g=class extends h{constructor(){super(...arguments),this.shape=c.RECTANGLE,this.calcDelay=e=>{if(0===e)return 0;let t=0;const r=u?.getAnimations()[0];return r&&(t=r.effect?.getComputedTiming().progress*m),(t+200*e)%m}}static get styles(){return l`:host{display:inline-flex}:host([shape=pill]) #loader{border-radius:var(--rem8)}:host([shape=circle]) #loader{border-radius:50%}#loader{background:var(--color-shimmer-background);height:100%;width:100%;position:relative;overflow-x:hidden}#shimmer-object{background:var(--color-shimmer-gradient-overlay);border-radius:.5rem;height:100%;width:200%;position:absolute;top:0;left:0;transform:translateX(-100%)}`}firstUpdated(){this.shimmer(p++)}async shimmer(e){await new Promise((e=>requestAnimationFrame(e)));u||(u=this.shimmerObject);const t={duration:m,delay:-1*this.calcDelay(e),iterations:1/0};this.shimmerObject?.animate([{transform:"translateX(50%)"}],t)}render(){return d`<div id="loader"> <span id="shimmer-object"></span> </div> `}};e([t({type:String})],g.prototype,"shape",void 0),e([r("#shimmer-object")],g.prototype,"shimmerObject",void 0),g=e([s("faceplate-shimmer")],g);const f="component-reload";class w{constructor(e,t){this.isLoading=!1,this.hasReloadError=!1,this.handleReload=async e=>{if(this.reloadUrl){this.isLoading=!0,this.hasReloadError=!1,this.host.requestUpdate();try{await this.getAndReplacePartial(e.detail?.queryParameters)}catch(e){this.hasReloadError=!0}this.isLoading=!1,this.host.requestUpdate()}};const{reloadUrl:r,containerSelector:s,mode:i=o.Contents}=t||{};(this.host=e).addController(this),this._partialRequest=new a(this.host),this._reloadUrl=r,this.containerSelector=s||this.host.tagName.toLowerCase(),this._mode=i}get reloadUrl(){return this._reloadUrl}set reloadUrl(e){this._reloadUrl=e}get mode(){return this._mode}set mode(e){this._mode=e}hostConnected(){this.host.addEventListener(f,this.handleReload)}hostDisconnected(){this.host.removeEventListener(f,this.handleReload)}async getAndReplacePartial(e={}){const t=this.reloadUrl&&Array.from(Object.entries(e)).reduce(((e,[t,r])=>i(e,t,r)),this.reloadUrl),r=await this._partialRequest.request(t),s=await(r?.text());if(!s)throw new Error("Unable to reload content");const a=(new DOMParser).parseFromString(s,"text/html").querySelector(this.containerSelector);if(!a)throw new Error(`Element ${this.containerSelector} not found in reload response`);if(this.mode!==o.Contents)n(a.outerHTML,this.host,this.mode);else{if(!a?.innerHTML)throw new Error("No content to reload");n(a.innerHTML,this.host,this.mode)}}}const b="mod-show-post-level-crowd-control-modal";export{f as C,c as L,b as O,w as a};
