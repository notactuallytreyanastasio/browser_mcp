import{b as t,a as e,a_ as s,M as a,O as o,da as i,db as n,dc as d,a6 as r,B as l,G as c,i as u,aV as h,w as p,x as m,t as g,_ as v,n as M,g as b,e as f}from"./shell-2264602c.js";import{x as y,c as w,I as k,aP as B,aQ as E,a as S,s as T}from"./icon-82dd10b4.js";import"./chat-mobile-xpromo-client-js-c803f3b0.js";import"./validate-image-b0892d29.js";import"./faceplate-form-8c3dd0aa.js";import{T as I,a as x}from"./faceplate-textarea-input-97dc2a34.js";const L=()=>t({source:"content_gate",action:"click",noun:"continue"});let j=class extends(e(T)){constructor(){super(...arguments),this.country="",this.subredditName="",this.subredditId="",this.isShredditPMComposeMigrationEnabled=!1,this.showMessageModeModal=!1,this.messageModsType="request",this.modMessageTextArea=s(),this.modSubjectText=s(),this.setPrefGatedOptIn=async()=>{if(this.trackEvent(L()),this.isLoggedIn&&this.subredditName.length)try{await a({operation:o.OptInToGatedSubreddit,variables:{input:{subredditName:this.subredditName}}})}catch(t){window.console.error(t)}finally{this.reload()}else this.setCookie(i)},this.setPrefQuarantinedOptIn=async()=>{if(this.trackEvent(L()),this.isLoggedIn&&this.subredditName.length)try{await a({operation:o.UpdateSubredditQuarantineOptInState,variables:{input:{optInState:n.OptedOut,subredditId:this.subredditId}}})}catch(t){window.console.error(t)}finally{this.reload()}else await this.setCookie(d),this.reload()},this.setNsfwAllowed=async()=>{if(this.isLoggedIn){const{data:t}=await a({operation:o.UpdateProfileSettings,variables:{input:{isNsfw:!0}}});t.updateProfileSettings?.ok&&this.reload()}else this.setCookie(r)},this.onCancelModModal=()=>{this.showMessageModeModal=!1},this.messageMod=async()=>{this.showMessageModeModal=!0,this.messageModsType="message"},this.requestToJoin=async()=>{this.showMessageModeModal=!0,this.messageModsType="request",this.trackEvent(t({source:"content_gate",action:"click",noun:"request_to_join_button"}))},this.sendMessageToMods=async()=>{const e=this.modMessageTextArea.value?.value||"",s=this.modSubjectText.value?.value||"Request to join",i=`/r/${this.subredditName}`;if(e.length){let n=!1;if(this.isShredditPMComposeMigrationEnabled){const{data:t}=await a({operation:o.SendMessageToSubreddit,variables:{input:{body:e,subject:`[join] ${s}`,subredditId:this.subredditId}}});n=t.sendMessageToSubreddit.ok}else{const{data:t}=await a({operation:o.ComposeMessage,variables:{input:{body:e,recipient:i,subject:`[join] ${s}`}}});n=!!t.composeMessage?.ok}if(n){if("request"===this.messageModsType){const{data:e}=await a({operation:o.UpdateContributorRequestTimestamp,variables:{input:{requestDatetime:(new Date).toISOString(),subredditId:this.subredditId}}});if(e.updateLastContributorRequestTimestamp?.ok)return this.trackEvent(t({source:"content_gate",action:"click",noun:"request_to_join_submit"})),this.reload()}this.showMessageModeModal=!1}}}}reload(){window.location.reload()}initializeSlottedElements(){this.shadowRoot.querySelector('[slot="secondaryButton"]')?.assignedNodes({flatten:!0}).forEach((t=>{const e=t;"gated-action-button"===e.id&&(this.gatedButton=e),"nsfw-action-button"===e.id&&(this.nsfwButton=e),"quarantine-action-button"===e.id&&(this.quarantineButton=e),"private-mod-action-button"===e.id&&(this.privateModeButton=e)})),this.shadowRoot.querySelector('[slot="tertiaryButton"]')?.assignedNodes({flatten:!0}).forEach((t=>{const e=t;"private-join-action-button"===e.id&&(this.privateRequestToJoinButton=e)}))}addEventListenerToSlottedElements(){this.gatedButton?.addEventListener("click",this.setPrefGatedOptIn),this.nsfwButton?.addEventListener("click",this.setNsfwAllowed),this.quarantineButton?.addEventListener("click",this.setPrefQuarantinedOptIn),this.privateModeButton?.addEventListener("click",this.messageMod),this.privateRequestToJoinButton?.addEventListener("click",this.requestToJoin)}removeEventListenerFromSlottedElements(){this.gatedButton?.removeEventListener("click",this.setPrefGatedOptIn),this.nsfwButton?.removeEventListener("click",this.setNsfwAllowed),this.quarantineButton?.removeEventListener("click",this.setPrefQuarantinedOptIn),this.privateModeButton?.removeEventListener("click",this.messageMod),this.privateRequestToJoinButton?.removeEventListener("click",this.requestToJoin)}firstUpdated(){this.initializeSlottedElements(),this.addEventListenerToSlottedElements()}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListenerFromSlottedElements()}setCookie(t){l({country:this.country,name:t,value:"true",options:c}),this.reload()}getBgImagePath(){const t=this.isLoggedIn?"home":"popular",e=u()?"dark":void 0,s=this.isDesktop?void 0:"mobile";return`${CLIENT_CONFIG.STATIC_BASE_URL}assets/feeds/${[t,e,s].filter(Boolean).join("-")}.jpg`}renderModForm(){return y`<faceplate-form class="w-full"> <p class="mb-md"> ${"message"===this.messageModsType?"Send A Private Message":"Write a short message to the moderators explaining why you want to join."} </p> ${"message"===this.messageModsType?y`<faceplate-text-input ${h(this.modSubjectText)} ?novalidate="${!0}" maxLength="${100}" class="mb-md w-100"> <span slot="label">Subject</span></faceplate-text-input>`:""} <faceplate-textarea-input class="w-full" ${h(this.modMessageTextArea)} size="${I.EXPANDED}" appearance="${x.SECONDARY}" name="textarea" maxLength="${1e4}" ?novalidate="${!0}"> <span slot="label">Message to moderators</span> </faceplate-textarea-input> </faceplate-form>`}renderModModal(){return y`<faceplate-modal open class="fixed top-1/2 -translate-y-1/2 w-[500px]"> <div slot="closeButton"> ${p({appearance:"secondary",attributes:{onclick:this.onCancelModModal},leadingIcon:w({size:k.Medium}),size:m.Medium})} </div> <div slot="titleGraphic" class="flex"> ${"message"===this.messageModsType?B({size:k.ExtraLarge}):E({size:k.ExtraLarge})} </div> <div slot="title"> ${"message"===this.messageModsType?"Message Mods":"Request to join"} </div> <div slot="primaryButton" ,> ${p({appearance:"primary",attributes:{className:"w-100",onclick:this.sendMessageToMods},children:"Send Message"})} </div> <div slot="secondaryButton" ,> ${p({appearance:"secondary",attributes:{className:"w-100",onclick:this.onCancelModModal},children:"Cancel"})} </div> ${this.renderModForm()} </faceplate-modal>`}render(){return y`<main> ${this.showMessageModeModal?this.renderModModal():y`<faceplate-modal open class="fixed top-1/2 -translate-y-1/2"> <slot name="titleGraphic" slot="titleGraphic"></slot> <slot name="title" slot="title"></slot> <slot name="closeButton" slot="closeButton"></slot> <slot name="primaryButton" slot="primaryButton"></slot> <slot name="secondaryButton" slot="secondaryButton"></slot> <slot name="tertiaryButton" slot="tertiaryButton"></slot> <slot></slot> </faceplate-modal> `} <div class="blurred-bg h-full w-full bg-no-repeat bg-cover" style="background-image:url('${this.getBgImagePath()}')"> <div class="shade h-full w-full"></div> </div> </main> `}};j.styles=[S`main{height:calc(100vh - var(--shreddit-header-height));width:100vw}faceplate-modal{max-width:min(90%,656px)}.blurred-bg{filter:blur(10px)}.blurred-bg .shade{background-color:rgba(0,0,0,.7)}`,g],v([M({type:String})],j.prototype,"country",void 0),v([M({type:String})],j.prototype,"subredditName",void 0),v([M({type:String})],j.prototype,"subredditId",void 0),v([M({type:Boolean,attribute:"is-pm-compose-migration-enabled"})],j.prototype,"isShredditPMComposeMigrationEnabled",void 0),v([M({type:Boolean})],j.prototype,"isDesktop",void 0),v([M({type:Boolean})],j.prototype,"isLoggedIn",void 0),v([b()],j.prototype,"showMessageModeModal",void 0),v([b()],j.prototype,"messageModsType",void 0),j=v([f("guard-community-modal")],j);
