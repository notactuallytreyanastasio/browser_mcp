import{x as e}from"./age-gate-standalone-client-js-5357b0cf.js";import{aW as t}from"./shell-2264602c.js";var i;class s{constructor(e,t){this.host=e,this.uxTypes=t,this.host.addController(this)}static initialize(){return this.initializePromise||(this.initializePromise=this._initialize()),this.initializePromise}static async _initialize(){try{await e(`script#${t}`)}catch(e){return void window.Sentry?.captureException?.(e)}try{window.google.accounts.id.initialize({client_id:CLIENT_CONFIG.GOOGLE_SSO_CLIENT_ID,callback:this.onGoogleCredentialResponse,itp_support:!0,auto_select:!0,cancel_on_tap_outside:!1,use_fedcm_for_prompt:!0})}catch(e){window.Sentry?.captureException?.(e)}}static registerListener(e,t){for(const i of e){const e=this.listenersByUX[i];e.includes(t)||e.push(t)}}static deregisterListener(e,t){for(const i of e){const e=this.listenersByUX[i],s=e.indexOf(t);s>-1&&e.splice(s,1)}}static parseCredentialResponse(e){const t=e?.credential;if(!t)throw new Error("No credential in response");try{const e=t.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),i=decodeURIComponent(atob(e).split("").map((e=>"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2))).join(""));return JSON.parse(i)}catch(e){throw new Error("Error decoding and parsing JWT")}}initialize(){return this.uxTypes&&this.host.onGoogleCredentialResponse&&i.registerListener(this.uxTypes,this.host.onGoogleCredentialResponse),i.initialize()}hostDisconnected(){this.uxTypes&&this.host.onGoogleCredentialResponse&&i.deregisterListener(this.uxTypes,this.host.onGoogleCredentialResponse)}}i=s,s.ButtonUX=["btn","btn_confirm","btn_add_session","btn_confirm_add_session","fedcm_button"],s.OneTapUX=["auto","user","user_1tap","user_2tap","fedcm_auto","fedcm","itp"],s.listenersByUX=[...i.ButtonUX,...i.OneTapUX].reduce(((e,t)=>(e[t]=[],e)),{}),s.onGoogleCredentialResponse=e=>{const t=i.listenersByUX[e.select_by];if(t)for(const i of t)i(e)};export{s as G};
