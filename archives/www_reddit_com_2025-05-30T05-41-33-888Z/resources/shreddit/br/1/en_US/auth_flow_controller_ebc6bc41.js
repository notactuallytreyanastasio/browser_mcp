import{cD as t,b as e,I as o,c as s,bd as a,y as i,cE as n,bR as r,u as c,be as d,b4 as h}from"./shell-2264602c.js";import{s as l,a as u}from"./password-recovery-11761f51.js";import{b as p}from"./helpers-e162eb2b.js";import{O as m,ap as w}from"./age-gate-standalone-client-js-5357b0cf.js";const g=/^(?:[a-zA-Z0-9-]+\.)?reddit\.com$/,b=["out.reddit.com","alb.reddit.com","blog.reddit.com","status.reddit.com","code.reddit.com","sp.reddit.com"],f=/^\u0020|[\u0000-\u0019\u1680\u180E\u2000-\u2029\u205f\u3000]/,v=["http:","https:"];let S=window.location;function E(){l();try{const e=new URL(S.href);e.pathname.match(t)&&(e.pathname="");const o=e.searchParams.get("dest");if(o&&function(t){if("string"!=typeof t||f.test(t))return!1;try{const{host:e,protocol:o}=new URL(t.toLowerCase());return!!o&&!!e&&v.includes(o)&&g.test(e)&&!b.includes(e)}catch(t){return!1}}(o)){const t=new URL(o);"old.reddit.com"===t.hostname&&t.searchParams.set("cache-bust",Date.now().toString()),e.href=t.toString()}else e.searchParams.delete("dest");const s=e.toString();s===S.href?S.reload():S.href=s}catch(t){S.reload()}}const k=(t,o)=>e({source:"onboarding",action:"click",noun:t},{action_info:{type:o}}),y=t=>e({action:"select",noun:"link_account",source:m},{target_user:{id:t}}),T=(t,o)=>e({source:m,action:w,noun:t},{action_info:{source_name:o??"unknown"}});class F{constructor(t){this.trackEvent=t=>{const e=s("track-event",{details:t});this.dispatchEvent(e)},this.dispatchSSOError=t=>{const e=t.charAt(0).toUpperCase()+t.slice(1).toLowerCase();this.dispatchError(`Something went wrong interacting with ${e}`,`auth-flow-provider-error-${t}`)},this.dispatchError=(t,e,a=o.error)=>{const i=s("faceplate-alert",{level:a,message:t,cause:e});this.dispatchEvent(i)},this.host=t,this.host.addController(this)}hostConnected(){this.authFlowManager=document.querySelector("auth-flow-manager")}dispatchEvent(t){this.host.dispatchEvent(t)}async show(t,e){const o=s("auth-flow-loading:start",{step:t});if(this.dispatchEvent(o),o.defaultPrevented)return;return await(this.authFlowManager?.show(t,e))?(this.dispatchEvent(s("auth-flow-loading:success",{step:t})),!0):(this.dispatchEvent(s("auth-flow-loading:error",{step:t})),!1)}back(){this.authFlowManager?.back()}close(){this.authFlowManager?.close()}async identityProviderSigin(t){try{this.trackEvent(T("sso_signin",t.authFlow));const e=await fetch(a.IdentityProviderSignin,{method:"POST",headers:{Accept:"application/json, text/vnd.reddit.partial+html","Content-Type":"application/json"},body:JSON.stringify({idToken:t.idToken,canCreate:Boolean(!t.isSignedInAutomatically),recaptchaToken:t.recaptchaToken,subscribeToEmailDigest:t.subscribeToEmailDigest,email:t.email,authFlow:t.authFlow,csrf_token:i.get("csrf_token"),auth_modularity:!0})}),o=n(e);switch(e.status){case d.UserAccountCreated:this.handleSSOAccountResolved({authFlow:t.authFlow||h.Unknown,provider:t.provider,operation:"signin",newAccountCreated:!0,requireEmailPermission:t.emailPermissionRequired,subscribeToEmailDigest:t.subscribeToEmailDigest});break;case d.UserLoggedIn:this.handleSSOAccountResolved({authFlow:t.authFlow||h.Unknown,provider:t.provider,operation:"signin",newAccountCreated:!1});break;case d.MultipleAccountsFound:{if(!o?.includes("json"))break;const{accounts:s}=await e.json();if(!s||0===s.length)break;const a={accounts:JSON.stringify(s),idToken:t.idToken,subscribeToEmailDigest:JSON.stringify(t.subscribeToEmailDigest),email:t.email,authFlow:t.authFlow??h.Unknown};this.show(h.SSOLinking,{bodyParams:a});break}case d.GoogleCredentialMismatch:u(t.email);break;default:if("text/vnd.reddit.partial+html"===o){const t=await e.text();r(t,this.host,c.Append)}else e.ok||this.dispatchSSOError(t.provider)}}catch(e){this.dispatchSSOError(t.provider)}}handleSSOAccountResolved(t){const e=`${t.operation}_${t.newAccountCreated?"register":"login"}`;if(this.trackEvent(p(t.authFlow,t.provider,e)),t.newAccountCreated){const e=t.requireEmailPermission&&!t.subscribeToEmailDigest;this.show(h.Onboarding,{bodyParams:{showEmailPermission:encodeURIComponent(e??!1)}})}else this.reloadToLoggedIn()}async reloadToLoggedIn(){const t=new CustomEvent("auth-completed",{bubbles:!0,composed:!0});this.dispatchEvent(t),t.defaultPrevented||setTimeout((()=>{E()}),2e3)}trackSSOFailure(t){const{authFlow:o,provider:s,reason:a}=t;this.trackEvent(((t,o,s)=>e({source:"onboarding",action:"fail",noun:t},{action_info:{reason:s,type:o}}))(o,s,a)),window.Sentry?.withScope((t=>{t.setExtra("flow",o),t.setExtra("provider",s),t.setExtra("reason",a),window.Sentry?.captureMessage("SSO authentication failed")})),this.dispatchSSOError(s)}}export{F as A,T as a,k as b,E as r,y as s};
