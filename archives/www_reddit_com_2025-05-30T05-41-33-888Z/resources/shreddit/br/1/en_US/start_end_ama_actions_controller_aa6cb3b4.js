import{O as t,M as s,T as e,c as a,I as n,U as o}from"./shell-2264602c.js";import{A as h}from"./links-9b598b77.js";import{P as i}from"./overflow-menu-actions-97fa1cfc.js";let r=s;function d(t){return t?.[0]?.message??"Something went wrong"}class u{constructor(t){this.handleAMAStarted=async({startsAt:t,endsAt:s})=>{this.updateSchedule(t,s),this.host.amaState=h.Live},this.handleAMAEnded=async()=>{this.updateSchedule(this.host.startsAt,new Date),this.host.amaState=h.Ended},this.handleClick=async(t=!1)=>{const s=this.host.amaState===h.Scheduled?"start":"end";!t&&"start"===s&&this.host.startsAt>new Date(Date.now()+6e5)?this.host.pubsub.publish(e.AMATryStartEarly):await this.updateAmaSchedule(s)},this.updateAmaSchedule=async t=>{if("end"===t)this.host.pubsub.publish(e.AMATryEnd);else{const t=new Date,s=this.host.endsAt;try{const a=await this._updateEventTimeMutation({postId:this.host.postId,event:{startsAt:t.toISOString(),endsAt:s.toISOString()}});this.host.pubsub.publish(e.AMAStarted,a)}catch(t){const s=a("faceplate-alert",{level:n.error,message:"Something went wrong. Please try again later",cause:o(t)});this.host.dispatchEvent(s)}}},this.endAma=async t=>{try{await this._endPostEventMutation({postId:this.host.postId,endNote:t}),this.host.pubsub.publish(e.PostUpdated,{postId:this.host.postId,value:!0,action:i.updateContent}),this.host.pubsub.publish(e.AMAEnded)}catch(t){const s=a("faceplate-alert",{level:n.error,message:"Something went wrong. Please try again later",cause:o(t)});this.host.dispatchEvent(s)}},this.host=t,this.host.addController(this)}async hostConnected(){this.host.amaState!==h.Ended&&(this.host.pubsub.subscribe(e.AMAStarted,this.handleAMAStarted),this.host.pubsub.subscribe(e.AMAEnded,this.handleAMAEnded))}hostDisconnected(){this.host.amaState!==h.Ended&&(this.host.pubsub.unsubscribe(e.AMAStarted,this.handleAMAStarted),this.host.pubsub.unsubscribe(e.AMAEnded,this.handleAMAEnded))}updateSchedule(t,s){this.host.startsAt=t??this.host.startsAt,this.host.endsAt=s??this.host.endsAt}_updateEventTimeMutation(s){return async function(s){const e={input:s},{data:a,errors:n}=await r({operation:t.UpdateEventTime,variables:e});if(n?.length)throw new Error(d(n));const{updatePost:o}=a;if(!o?.ok)throw new Error(d(o?.errors));return{startsAt:new Date(o.startsAt),endsAt:new Date(o.endsAt)}}(s)}_endPostEventMutation(s){return async function(s){const e={input:s},{data:a,errors:n}=await r({operation:t.EndPostEvent,variables:e});if(n?.length)throw new Error(d(n));const{endPostEvent:o}=a;if(!o?.ok)throw new Error(d(o?.errors))}(s)}}export{u as S};
