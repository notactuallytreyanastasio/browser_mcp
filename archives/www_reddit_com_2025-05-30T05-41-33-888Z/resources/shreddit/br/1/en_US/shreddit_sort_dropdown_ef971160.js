import{b as e,a as t,_ as s,g as r,w as o,x as i,t as n,c as a,J as l,n as d,e as c,f4 as p,M as u,O as h,H as m,I as g}from"./shell-2264602c.js";import"./select-controller-e11d5e4c.js";import"./community-picker-9f84d972.js";import"./faceplate-tooltip-842394bc.js";import{s as S,P as b,I as y,x as v,l as f,cw as w,cx as I,cy as T,cz as D,cA as C,cB as O,a2 as k,cC as x}from"./icon-82dd10b4.js";import{q as E}from"./age-gate-standalone-client-js-5357b0cf.js";import{l as $}from"./expandable-section-header-edd4c2b3.js";import"./user-flair-afad799f.js";const A=t(S);var N,L;!function(e){e.ICON="icon",e.TEXT="text",e.ICON_AND_TEXT="icon_and_text"}(N||(N={}));class _ extends A{constructor(){super(...arguments),this.withoutTooltip=!1,this.dropdownHeaderText="",this.selectedItemDisplayType=N.TEXT,this.disabled=!1,this.isEntityFilterEnabled=!1,this.isDropdownOpen=!1,this.onDropdownClose=()=>{this.isDropdownOpen=!1,this.tooltip?.close?.()},this.onDropdownOpen=()=>{this.isDropdownOpen=!0},this.onClickDropdownItem=e=>{this.preventTooltipToActivate(),this.onSelectDropdownItem(e)},this.onKeyUpDropdownItem=e=>{"Enter"===e.key&&(this.onSelectDropdownItem(e),this.preventTooltipToActivate(),this.dropdownMenu?.close())},this.renderDropdownMenu=(e,t,s)=>{const r=this.isEntityFilterEnabled?o({appearance:"bordered",attributes:{"aria-expanded":this.isDropdownOpen?"true":"false","aria-label":this.getAriaLabel(t),id:this.triggerId,disabled:this.disabled},selected:this.isDropdownOpen,size:i.Small,leadingIcon:b({size:y.Small})}):E({appearance:"plain",attributes:{"aria-expanded":this.isDropdownOpen?"true":"false","aria-label":this.getAriaLabel(t),className:this.disabled?"":"text-neutral-content-weak",id:this.triggerId,disabled:this.disabled},children:e,selected:this.isDropdownOpen,size:i.Small}),n=v` <faceplate-tracker source="${this.telemetrySource}" action="click" noun="sorting" slot="${f(this.withoutTooltip?void 0:"trigger")}"> ${r} </faceplate-tracker>`;return v`<faceplate-dropdown-menu class="nd:hidden" .onopen="${this.onDropdownOpen}" .onclose="${this.onDropdownClose}" ?disabled="${this.disabled}"> ${this.withoutTooltip?n:this.wrapWithTooltip(n)} <faceplate-menu slot="menu" class="overflow-y-auto max-h-[50vh]" hidden> ${this.dropdownHeaderText?v`<div class="font-semibold m-md mb-xs">${this.dropdownHeaderText}</div>`:""} ${s} </faceplate-menu> </faceplate-dropdown-menu>`}}static get styles(){return[n]}connectedCallback(){super.connectedCallback(),this.mutationObserver=new MutationObserver((e=>{e.forEach((e=>{const t=e.target;"FACEPLATE-MENU"===t.nodeName&&t.hasAttribute("hidden")&&this.isDropdownOpen&&this.onDropdownClose()}))})),this.mutationObserver.observe(this.shadowRoot,{attributes:!0,attributeFilter:["hidden"],childList:!1,characterData:!1,subtree:!0})}disconnectedCallback(){super.disconnectedCallback(),this.mutationObserver?.disconnect()}fireOffSortEvents(t,s){var r,o;s&&(this.sortEvent&&this.dispatchEvent(a(this.sortEvent,{selected:s,event:t})),this.telemetrySource&&this.trackEvent((r=this.telemetrySource,o=s.toLowerCase(),e({source:r,action:"click",noun:o}))))}preventTooltipToActivate(){this.menuButton?.addEventListener("focusin",(e=>{e.stopImmediatePropagation()}),{once:!0})}wrapWithTooltip(e){return v` <faceplate-tooltip class="nd:hidden" appearance="inverted" aria-label="${this.dropdownHeaderText}"> ${e} <slot name="tooltip-content"></slot> </faceplate-tooltip> `}getAriaLabel(e){return e?`${this.dropdownHeaderText}: ${e}`:this.dropdownHeaderText}}s([l("faceplate-tooltip")],_.prototype,"tooltip",void 0),s([l("faceplate-dropdown-menu")],_.prototype,"dropdownMenu",void 0),s([l("faceplate-tracker button")],_.prototype,"menuButton",void 0),s([d({type:Boolean,attribute:"without-tooltip"})],_.prototype,"withoutTooltip",void 0),s([d({type:String,attribute:"header-text"})],_.prototype,"dropdownHeaderText",void 0),s([d({type:String,attribute:"selected-item-display-type"})],_.prototype,"selectedItemDisplayType",void 0),s([d({type:String,attribute:"sort-event"})],_.prototype,"sortEvent",void 0),s([d({type:String,attribute:"telemetry-source"})],_.prototype,"telemetrySource",void 0),s([d({type:String,attribute:"trigger-id"})],_.prototype,"triggerId",void 0),s([d({type:Boolean})],_.prototype,"disabled",void 0),s([d({type:Boolean,attribute:"entity-filter-enabled"})],_.prototype,"isEntityFilterEnabled",void 0),s([r()],_.prototype,"isDropdownOpen",void 0),function(e){e.ICON="icon",e.TEXT="text",e.ICON_AND_TEXT="icon_and_text"}(L||(L={}));let B=class extends _{constructor(){super(...arguments),this.setCurrentlySelectedItem=e=>{if(!e)return;const{innerText:t}=e;if(this.currentlySelectedItemLabel=t,this.selectedItemDisplayType===L.TEXT)this.currentlySelectedItem=t;else{const s=(this.querySelector('[slot="selected-item-icon-override"]')??e).querySelector("svg"),r=s?.getAttribute("icon-name")?.includes("fill");if(!s||r)return;const o=v`${s}`;this.selectedItemDisplayType===L.ICON?this.currentlySelectedItem=o:this.currentlySelectedItem=v`<span class="flex"><span class="flex items-center mr-xs">${o}</span><span>${t}</span></span>`}},this.toggleSelectedItemUI=e=>{const t=this.querySelector("li[rpl-selected]"),s=t?.querySelector('[role="menuitem"]');t?.removeAttribute("rpl-selected"),s?.setAttribute("aria-selected","false");const r=e?.querySelector('[role="menuitem"]');if(e?.setAttribute("rpl-selected",""),r?.setAttribute("aria-selected","true"),r&&s){const e=s?.className;s.className=r.className,r.className=e}},this.silentlySelectItemByValue=e=>{const t=this.querySelector(`[value="${e}"]`);if(t){const e=t?.querySelector("li");this.setCurrentlySelectedItem(e),this.toggleSelectedItemUI(e)}},this.onSelectDropdownItem=e=>{const t=e.target,s=t?.closest("li");this.setCurrentlySelectedItem(s),this.toggleSelectedItemUI(s);const r=t?.closest("data")?.getAttribute("value")||void 0;this.fireOffSortEvents(e,r)}}connectedCallback(){super.connectedCallback(),requestAnimationFrame((()=>{const e=this.querySelector('[slot="selected-item"]');this.setCurrentlySelectedItem(e)}))}render(){return this.renderDropdownMenu(this.currentlySelectedItem,this.currentlySelectedItemLabel,v` <slot name="dropdown-items" @click="${this.onClickDropdownItem}" @keyup="${this.onKeyUpDropdownItem}"></slot>`)}};s([r()],B.prototype,"currentlySelectedItem",void 0),B=s([c("shreddit-sort-dropdown")],B);const j=(e,t)=>{switch(e){case p.Top:return t===p.Top?"Top (Default)":"Top";case p.New:return t===p.New?"New (Default)":"New";case p.Controversial:return t===p.Controversial?"Controversial (Default)":"Controversial";case p.Old:return t===p.Old?"Old (Default)":"Old";case p.Random:return t===p.Random?"Random (Default)":"Random";case p.Qa:return t===p.Qa?"Q&A (Default)":"Q&A";case p.Live:return t===p.Live?"Live (Default)":"Live";default:return"Best"}},R=e=>{switch(e){case p.Confidence:return w();case p.Top:return x();case p.New:return k();case p.Controversial:return O();case p.Old:return C();case p.Random:return D();case p.Qa:return T();case p.Live:return I();default:return w()}},q=[p.Blank,p.Random,p.Live],F=[p.Confidence,p.Top,p.New,p.Controversial,p.Old,p.Random,p.Qa,p.Live,p.Blank];let H=class extends _{constructor(){super(...arguments),this.currentSort=p.Confidence,this.suggestedSort=void 0,this.postId="",this.subredditId="",this.disableOptions=q,this.onSelectDropdownItem=(e,t)=>{t&&(this.currentSort=t,this.fireOffSortEvents(e,t))},this.setSuggestedSort=async t=>{const s=t?p.Blank:this.currentSort,{data:r}=await u({operation:h.SetSuggestedSort,variables:{input:{sort:s,subredditId:this.subredditId,postId:`t3_${this.postId}`}}});if(r?.setSuggestedSort?.ok){if(this.suggestedSort=s,this.telemetrySource){const r=t?"clear_suggested_sort":"set_suggested_sort";this.trackEvent(e({source:this.telemetrySource,action:"click",noun:r},{action_info:{reason:s,page_type:m.PostDetail}}))}const r=t?"Suggested sort has been cleared":"Suggested sort has been set";this.dispatchFaceplateAlertEvent(g.success,r)}else{const e=t?"There was an error clearing the suggested sort":"There was an error setting the suggested sort";this.dispatchFaceplateAlertEvent(g.error,e)}},this.renderSuggestedSortOptions=()=>this.isCurrentSuggestedSort?o({appearance:"plain",attributes:{onclick:()=>this.setSuggestedSort(!0),className:"text-12 font-semi bold"},size:i.Small,children:"Clear default sort"}):v` <faceplate-tooltip class="nd:hidden">${o({appearance:"plain",attributes:{onclick:()=>this.setSuggestedSort(),className:"text-12 font-semi bold",slot:"trigger"},size:i.Small,children:"Set as Default"})}Set as the default sort for this post for all visitors</faceplate-tooltip>`,this.renderDropdownItems=()=>v`${(({html:e,listItemRenderer:t,selectedSort:s,suggestedCommentSort:r,disableOptions:o,onclick:i})=>Object.values(F).map((n=>o.includes(n)?e``:e` <data value="${n}"> ${t({label:j(n,r),selected:n===s,leadingIcon:R(n),attributes:{role:"menuitem",onclick:e=>i&&i(e,n)}})} </data> `)))({html:v,listItemRenderer:$,selectedSort:this.currentSort,suggestedCommentSort:this.suggestedSort,disableOptions:this.disableOptions,onclick:(e,t)=>this.onSelectDropdownItem(e,t)})}`}get isCurrentSuggestedSort(){return!(!this.suggestedSort||this.suggestedSort===p.Blank)&&this.currentSort===this.suggestedSort}dispatchFaceplateAlertEvent(e,t){const s=a("faceplate-alert",{level:e,message:t});this.dispatchEvent(s)}render(){const e=j(this.currentSort,this.suggestedSort);return v`<div class="flex items-center justify-between"> ${this.renderDropdownMenu(e,e,this.renderDropdownItems())}${this.currentSort===p.Confidence||this.currentSort===p.Blank?"":this.renderSuggestedSortOptions()} </div>`}};s([d({type:String,attribute:"sort"})],H.prototype,"currentSort",void 0),s([d({type:String,attribute:"suggested-sort"})],H.prototype,"suggestedSort",void 0),s([d({type:String,attribute:"post-id"})],H.prototype,"postId",void 0),s([d({type:String,attribute:"subreddit-id"})],H.prototype,"subredditId",void 0),s([d({type:String,attribute:"disable-options"})],H.prototype,"disableOptions",void 0),H=s([c("shreddit-sort-dropdown-with-suggested")],H);export{B as ShredditSortDropdown,H as ShredditSortDropdownWithSuggested};
