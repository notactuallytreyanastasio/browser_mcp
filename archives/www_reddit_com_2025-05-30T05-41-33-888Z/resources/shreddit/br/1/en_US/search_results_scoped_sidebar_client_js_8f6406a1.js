import{a as e,Q as t,_ as i,n as s,e as r,r as n,a2 as o,h1 as a,ep as d,u as c,b5 as l,w as u,x as p,aJ as b,H as h,em as m,t as g,K as y,T as x,o as f,c as v,I as w,bm as $}from"./shell-2264602c.js";import{s as S,x as C,o as k,A as E,cv as I,I as B,y as M,h as N}from"./icon-82dd10b4.js";import{g as j,S as P,A as T,N as R}from"./telemetry-f551bd56.js";import{c as F}from"./shreddit-subreddit-overflow-control-8dd5f479.js";import{E as L,W as D}from"./community-widget-edit-modal-aed011bf.js";import{s as G}from"./shop-gallery-data-fetcher-client-js-73ca6a07.js";import"./community-widget-edit-button-c2f23d78.js";import"./expandable-section-header-edd4c2b3.js";import"./index-3d99aec6.js";import"./select-controller-e11d5e4c.js";import"./user-flair-afad799f.js";import"./age-gate-standalone-client-js-5357b0cf.js";import"./community-picker-9f84d972.js";import"./models-e42bd73f.js";import"./feeds-4612b45d.js";import"./custom-feed-edit-button-a4f2cd83.js";import"./utils-19e4b642.js";const U="line-clamp-3",_="hidden",z="description",q="show-more-btn";const O=e(t(S));let A=class extends O{constructor(){super(...arguments),this.name="",this.subredditId="",this.prefixedName="",this.displayName="",this.description="",this.subscribers=0,this.bannerUrl="",this.routerName="",this.bannerFallbackBackgroundColor="",this.notificationLevel="",this.idCardWidgetId="",this.subscribersText="",this.currentlyViewingText="",this.isModerator=!1,this.hasModqueueAccess=!1,this.isSubscribed=!1,this.isMuted=!1,this.isFavorite=!1,this.isUserLoggedIn=!1,this.isPdpRoute=!1,this.newBannerExperimentEnabled=!1,this.allowIdCardEdit=!1,this.isCustomFeedEnabled=!1,this.active=0,this.hasCommunityGuide=!1,this.isCommunityGuideExperimentEnabled=!1,this.isModInsightsWidgetExperimentEnabled=!1,this.isPaidSubscriptionsEnabled=!1,this.isPaidSubscriber=!1,this.isRedesign=!1,this._activateFeature=async e=>n(e),this._getPageType=o,this.onSubscriptionChange=async e=>{let t;this.name===e.name&&(t=e.subscribed&&this.isSubscribed!==e.subscribed,this.isSubscribed=e.subscribed),t&&this.isPdpRoute&&this.isUserLoggedIn&&this.subredditId&&await this._activateFeature({name:a,queryParams:{subredditId:this.subredditId,pageType:String(this._getPageType())}})},this.activateSubscriptionPurchaseDialog=()=>n({name:d,routeParams:{subredditId:this.subredditId},renderMode:c.Contents}),this.activateSubscriptionManagementDialog=()=>n({name:l,routeParams:{subredditId:this.subredditId},renderMode:c.Contents}),this.renderJoinOrModButton=()=>{if(!this.newBannerExperimentEnabled||this.isPdpRoute)return this.isModerator?u({appearance:"primary",size:p.Small,attributes:{href:this.hasModqueueAccess?`/mod/${this.name}/queue`:`/mod/${this.name}/insights`,className:"modtools-btn"},children:"Mod Tools"}):this.isSubscribed&&this.isPaidSubscriber?u({attributes:{onclick:this.activateSubscriptionManagementDialog,type:"button"},appearance:"bordered",size:p.Small,children:"Upgraded"}):this.isSubscribed&&this.isPaidSubscriptionsEnabled?u({attributes:{onclick:()=>{this.activateSubscriptionPurchaseDialog(),b(this,F({subreddit:{id:this.subredditId,name:this.name},pageType:h.PostDetail}))},type:"button",className:"bg-club-background text-club-onBackground hover:bg-club-background-hovered"},size:p.Small,children:C`Upgrade`}):C`<faceplate-tracker source="community" action="click" noun="${this.isSubscribed?"unsubscribe":"subscribe"}"> <shreddit-join-button name="${this.name}" subreddit-id="${this.subredditId}" button-classes="min-w-[70px]" subscribe-label="Join" unsubscribe-label="Joined" unsubscribe-button-type-override="bordered" ?subscribed="${this.isSubscribed}"></shreddit-join-button></faceplate-tracker>`},this.renderNotificationControl=()=>this.isSubscribed?C` <shreddit-notification-frequency-control subreddit-id="${this.subredditId}" notification-level="${this.notificationLevel}"></shreddit-notification-frequency-control>`:"",this.renderOverflowControl=()=>this.isUserLoggedIn?C`<shreddit-subreddit-overflow-control name="${this.name}" prefixed-name="${this.prefixedName}" subreddit-id="${this.subredditId}" ?is-muted="${this.isMuted}" ?is-favorite="${this.isFavorite}" ?subscribed="${this.isSubscribed}" ?show-join-button="${this.isModerator}" ?is-user-logged-in="${this.isUserLoggedIn}" ?allow-custom-feed="${this.isCustomFeedEnabled}"></shreddit-subreddit-overflow-control>`:"",this.checkDescriptionForClamping=()=>{if(!this.isPdpRoute)return;const e=this.getDescriptionContainer();if(!e)return;this.isTextClamped(e)&&this.unhideShowMoreButton()},this.showMoreText=()=>{this.hideShowMoreButton(),this.removeLineClampFromDescription()},this.removeLineClampFromDescription=()=>{const e=this.getDescriptionContainer();e?.classList.remove(U)},this.hideShowMoreButton=()=>{const e=this.getShowMoreButton();e?.classList.add(_)},this.unhideShowMoreButton=()=>{const e=this.getShowMoreButton();e?.classList.remove(_)},this._showCommunityGuide=m,this.onShowCommunityGuide=async()=>{try{await this._showCommunityGuide(this.name,!1)}catch{this.showErrorToast("Failed to load community guide")}},this.isTextClamped=e=>e.scrollHeight>e.clientHeight,this.getDescriptionContainer=()=>this.shadowRoot?.getElementById(z),this.getShowMoreButton=()=>this.shadowRoot?.getElementById(q),this.renderShowMoreButton=()=>u({appearance:this.isRedesign?"secondary":"plain",attributes:{id:q,className:`${_} ${this.isRedesign?"":"text-[color:var(--color-a-default)]"} no-underline mb-xs`,onclick:this.showMoreText},children:"Show more",size:p.Small}),this.renderDescription=()=>this.description?C`<div id="${z}" class="i18n-subreddit-description description text-left text-neutral-content-weak overflow-hidden ${this.isPdpRoute?U:""}"> ${this.description} </div> ${this.renderShowMoreButton()}`:C``}static get styles(){return[g,y(":host {\n  text-align: center;\n}\n.r-slash-icon {\n  border: 2px solid var(--color-tone-1);\n  border-radius: 50%;\n  overflow: hidden;\n}\nh2 {\n  font: var(--font-title-h2);\n  font-weight: bold;\n  margin: 0.5rem 0 0;\n}\n.description,\n.subscribers {\n  margin-bottom: 0.5rem;\n}\n.prefixedName {\n  font-size: 18px;\n}\na {\n  color: inherit;\n  text-decoration: none;\n}\n.header {\n  background-position: top center;\n  background-repeat: no-repeat;\n  background-size: auto 6.8em;\n  position: relative;\n}\n.banner {\n  background-color: var(--color-tone-6);\n  background-position: center center;\n  background-size: cover;\n  margin-top: -1rem;\n  margin-left: -1rem;\n  margin-right: -1rem;\n}\n")]}firstUpdated(){const e=this.parentElement;e&&e.classList.add("xs:block"),this.subscribe(x.SubredditSubscriptionChange,this.onSubscriptionChange),requestAnimationFrame((()=>{this.checkDescriptionForClamping()}));const t=new CustomEvent($,{bubbles:!0,composed:!0,detail:{name:"shreddit-subreddit-header"}});this.dispatchEvent(t)}disconnectedCallback(){super.disconnectedCallback(),this.unsubscribe(x.SubredditSubscriptionChange,this.onSubscriptionChange)}renderPdpRouteHeader(){return C` <div class="${"flex justify-between"}"> ${this.prefixedName?C` <span class="flex items-center truncate"> <a href="/${this.prefixedName}" class="flex justify-between truncate focus-visible:-outline-offset-1"> <div class="prefixedName font-bold truncate mr-xs">${this.prefixedName}</div> </a> <slot name="community-status"></slot> </span> `:""} <div class="flex items-center gap-sm">${this.renderJoinOrModButton()}</div> </div>`}renderHeader(){return this.routerName===G?C`<h2 class="uppercase text-left font-semibold text-neutral-content-weak text-12 mb-sm"> About community </h2>`:!this.newBannerExperimentEnabled||this.isPdpRoute?C` <div class="${"flex flex-col gap-sm pt-md"}"> <div class="flex justify-between gap-sm"> ${this.prefixedName?C` <a class="prefixedName font-bold truncate mr-xs no-underline" href="/${this.prefixedName}">${this.prefixedName}</a> `:""} ${this.renderOverflowControl()} </div> <div class="flex items-center gap-sm"> ${this.renderJoinOrModButton()} ${this.renderNotificationControl()} </div> </div>`:void 0}renderBanner(){return this.routerName===G||this.isPdpRoute?"":C`<div class="banner rounded-t-[8px]" style="${k({backgroundImage:this.bannerUrl?`url('${this.bannerUrl}')`:"",backgroundColor:this.bannerFallbackBackgroundColor?this.bannerFallbackBackgroundColor:"",height:this.bannerUrl?"128px":""})}"></div>`}renderSubscribers(){if(this.isModInsightsWidgetExperimentEnabled&&this.isModerator||this.routerName===G||!this.subscribers)return E;const e=C` <span class="text-neutral-content-strong"> <strong id="subscribers"> <faceplate-number number="${this.subscribers}" pretty> </faceplate-number> </strong></span> `,t=this.subscribersText?C` ${e} <span class="text-[12px] text-neutral-content-weak subscribers-text"> ${this.subscribersText} </span> `:f({count:this.subscribers,one:C` ${e} <span class="text-[12px] text-neutral-content-weak subscribers-text"> Member </span> `,few:C` ${e} <span class="text-[12px] text-neutral-content-weak subscribers-text"> Members </span> `,many:C` ${e} <span class="text-[12px] text-neutral-content-weak subscribers-text"> Members </span> `,other:C` ${e} <span class="text-[12px] text-neutral-content-weak subscribers-text"> Members </span> `}),i=C` <strong id="online"><faceplate-number number="${this.active}" pretty></faceplate-number></strong> `,s=this.currentlyViewingText||"Online";return C` <div class="flex justify-between text-left subscribers mt-xs gap-2xs"> <div class="flex flex-col items-start flex-1">${t}</div> ${this.active?C` <div class="active flex flex-col items-start flex-1"> <span class="text-neutral-content-strong"> ${i} </span> <span class="text-[12px] text-neutral-content-weak"> <span class="inline-flex bg-kiwigreen-400 rounded-full w-xs h-xs"></span> <span class="currently-viewing-text">${s}</span> </span> </div> `:""} <div class="flex flex-col items-start"> <slot name="directoryLink"></slot> </div> </div> `}showErrorToast(e){const t=v("faceplate-alert",{message:e,level:w.error,cause:"uncategorized"});this.dispatchEvent(t)}renderCommunityGuideBtn(){if(!this.isCommunityGuideExperimentEnabled)return"";if(this.hasCommunityGuide){const e=j(this.subredditId,this.name);return C` <faceplate-tracker class="mt-sm mb-md" source="${P.COMMUNITY_GUIDE}" action="${T.CLICK}" noun="${R.OPEN}" data-faceplate-tracking-context="${e}"> ${u({appearance:"secondary",size:p.Small,attributes:{id:"show-community-guide-btn",className:"w-full",onclick:this.onShowCommunityGuide},children:"Community Guide",leadingIcon:I({size:B.ExtraSmall})})} </faceplate-tracker> `}return this.isModerator?u({appearance:"bordered",size:p.Small,attributes:{id:"community-guide-settings",className:"w-full mt-sm mb-md",href:`/mod/${this.name}/guide`,target:"_blank"},children:"Add a community guide",leadingIcon:M({size:B.ExtraSmall})}):""}renderTitle(){const e=this.displayName||this.name,t=C`<div id="title" class="i18n-subreddit-title text-left text-neutral-content ${this.isRedesign?"text-16 font-semibold":"text-14 font-bold"} mt-xs"> ${e} </div>`;return this.allowIdCardEdit&&!this.isPdpRoute?C` <div class="flex justify-between items-end py-xs"> ${t} <community-widget-edit-button subreddit-name="${this.name}" page-id="${L.IdCard}" widget-id="${this.idCardWidgetId}"> <faceplate-tracker source="community_widgets" action="click" noun="edit_widget" data-faceplate-tracking-context="${JSON.stringify({widget:{type:D[L.IdCard],target_subreddit_name:this.name,target_subreddit_id:this.subredditId}})}"> ${u({appearance:"secondary",shape:"pill",attributes:{type:"button",className:"w-lg h-lg","aria-label":"Edit subreddit ID card"},leadingIcon:N({size:B.ExtraSmall}),size:p.ExtraSmall})} </faceplate-tracker> </community-widget-edit-button> </div>`:t}render(){const e="Community Info Section";return C` <div class="header ${this.isRedesign?"":"px-md"}"> <h1 class="absolute -top-full -left-full w-px h-px overflow-hidden" aria-label="${e}"> ${e} </h1> ${this.renderBanner()} ${this.isPdpRoute?this.renderPdpRouteHeader():this.renderHeader()} <div class="flex flex-col justify-start"> ${this.renderTitle()} ${this.renderDescription()} <slot name="community-details"></slot> ${this.renderCommunityGuideBtn()} </div> <div class="flex flex-col justify-start"> <slot name="mod-insights-widget"></slot> </div> ${this.renderSubscribers()} </div> `}};i([s({type:String})],A.prototype,"name",void 0),i([s({type:String,attribute:"subreddit-id"})],A.prototype,"subredditId",void 0),i([s({type:String,attribute:"prefixed-name"})],A.prototype,"prefixedName",void 0),i([s({type:String,attribute:"display-name"})],A.prototype,"displayName",void 0),i([s({type:String})],A.prototype,"description",void 0),i([s({type:Number})],A.prototype,"subscribers",void 0),i([s({type:String,attribute:"banner-url"})],A.prototype,"bannerUrl",void 0),i([s({type:String,attribute:"router-name"})],A.prototype,"routerName",void 0),i([s({type:String,attribute:"banner-background-fallback-color"})],A.prototype,"bannerFallbackBackgroundColor",void 0),i([s({type:String,attribute:"notification-level"})],A.prototype,"notificationLevel",void 0),i([s({type:String,attribute:"id-card-widget-id"})],A.prototype,"idCardWidgetId",void 0),i([s({type:String,attribute:"subscribers-text"})],A.prototype,"subscribersText",void 0),i([s({type:String,attribute:"currently-viewing-text"})],A.prototype,"currentlyViewingText",void 0),i([s({type:Boolean,attribute:"is-moderator"})],A.prototype,"isModerator",void 0),i([s({type:Boolean,attribute:"modqueue-access"})],A.prototype,"hasModqueueAccess",void 0),i([s({type:Boolean,attribute:"is-subscribed"})],A.prototype,"isSubscribed",void 0),i([s({type:Boolean,attribute:"is-muted"})],A.prototype,"isMuted",void 0),i([s({type:Boolean,attribute:"is-favorite"})],A.prototype,"isFavorite",void 0),i([s({type:Boolean,attribute:"is-user-logged-in"})],A.prototype,"isUserLoggedIn",void 0),i([s({type:Boolean,attribute:"is-pdp-route"})],A.prototype,"isPdpRoute",void 0),i([s({type:Boolean,attribute:"new-banner-experiment-enabled"})],A.prototype,"newBannerExperimentEnabled",void 0),i([s({type:Boolean,attribute:"allow-id-card-edit"})],A.prototype,"allowIdCardEdit",void 0),i([s({type:Boolean,attribute:"allow-custom-feed"})],A.prototype,"isCustomFeedEnabled",void 0),i([s({type:Number})],A.prototype,"active",void 0),i([s({type:Boolean,attribute:"has-community-guide"})],A.prototype,"hasCommunityGuide",void 0),i([s({type:Boolean,attribute:"community-guide-experiment-enabled"})],A.prototype,"isCommunityGuideExperimentEnabled",void 0),i([s({type:Boolean,attribute:"is-mod-insights-widget-experiment-enabled"})],A.prototype,"isModInsightsWidgetExperimentEnabled",void 0),i([s({type:Boolean,attribute:"paid-subscriptions-enabled"})],A.prototype,"isPaidSubscriptionsEnabled",void 0),i([s({type:Boolean,attribute:"paid-subscriber"})],A.prototype,"isPaidSubscriber",void 0),i([s({type:Boolean,attribute:"redesign"})],A.prototype,"isRedesign",void 0),A=i([r("shreddit-subreddit-header")],A);
