import{_ as t,n as s,e as r}from"./shell-2264602c.js";import{s as e,a as o,x as a}from"./icon-82dd10b4.js";var c;!function(t){t.Error="error",t.Success="success",t.Incomplete="incomplete"}(c||(c={}));const l=n(16);function i(t,s){return t-s/100*t}function n(t){return 2*Math.PI*t}let u=class extends e{constructor(){super(...arguments),this.value=0,this.status=c.Incomplete}static get styles(){return o`:host{--loader-size-base:var(--rem40);display:inline-block;position:relative}:host([status=incomplete]){color:var(--color-neutral-content,var(--color-tone-1))}:host([status=success]){color:var(--color-success-content,var(--color-alert-positive))}:host([status=error]){color:var(--color-danger-content,var(--color-alert-negative))}svg{height:var(--loader-size,var(--loader-size-base));width:var(--loader-size,var(--loader-size-base));fill:none;stroke-width:8;display:block}.bg{stroke:var(--color-neutral-content-disabled,var(--color-tone-3))}.track{stroke:currentColor;transition:.35s stroke-dashoffset;transform:rotate(-90deg);transform-origin:50% 50%}.icon{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}::slotted([slot=error]),::slotted([slot=success]){display:flex}`}render(){const t=this.status===c.Success;return a` <svg viewBox="0 0 40 40" class="loader" xmlns="http://www.w3.org/2000/svg"> <circle class="bg" cx="20" cy="20" r="${16}"></circle> <circle class="track ${this.status}" cx="20" cy="20" r="${16}" stroke-dasharray="${l} ${l}" stroke-dashoffset="${i(l,t?100:this.value)}"></circle> </svg> <div class="icon"> <slot name="${this.status}"></slot> </div> `}};t([s({type:Number})],u.prototype,"value",void 0),t([s({type:String,reflect:!0})],u.prototype,"status",void 0),u=t([r("faceplate-progress")],u);export{u as FaceplateProgress,c as ProgressState,n as calcCircumference,i as calcStokeDashOffset};
