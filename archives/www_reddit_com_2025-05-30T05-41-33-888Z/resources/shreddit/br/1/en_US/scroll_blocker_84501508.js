import{bH as e,c as t,I as o}from"./shell-2264602c.js";import{x as n}from"./icon-82dd10b4.js";const s="wheel",l="touchmove",d="scroll-is-blocked";function a(e){e.preventDefault()}function r(e){e.stopPropagation()}class c extends e{constructor(){super(...arguments),this.blockedSources=new Set([])}get shredditApp(){return document.querySelector("shreddit-app")}get isDebugEnabled(){return this.shredditApp?.hasAttribute("debug")}preventOverscrollOnBody(){document.body.classList.contains(d)||document.body.classList.add(d)}allowOverscrollOnBody(){document.body.classList.remove(d)}preventEventOnNode(e,t){t.addEventListener(e,a,{passive:!1})}allowEventOnNode(e,t){t.removeEventListener(e,a)}stopEventPropagationOnNode(e,t){t.addEventListener(e,r,{passive:!1})}allowEventPropagationOnNode(e,t){t.removeEventListener(e,r)}rafOrYOLO(e){requestAnimationFrame?requestAnimationFrame(e):e()}applyBlocking(){return new Promise((e=>{this.rafOrYOLO((()=>{const t=new Set,o=new Set;for(const e in c.CURRENT_SCROLL_BLOCKERS){const n=c.CURRENT_SCROLL_BLOCKERS[e];this.allowEventOnNode(s,n.targetNode),n.allowWheelEvents?this.allowEventPropagationOnNode(s,n.sourceNode):(this.preventEventOnNode(s,n.targetNode),this.stopEventPropagationOnNode(s,n.sourceNode),o.add(n.targetNode)),this.allowEventOnNode(l,n.targetNode),n.allowTouchEvents?this.allowEventPropagationOnNode(l,n.sourceNode):(this.preventEventOnNode(l,n.targetNode),this.stopEventPropagationOnNode(l,n.sourceNode),t.add(n.targetNode))}o.size>0?(this.preventOverscrollOnBody(),this.preventEventOnNode(s,document)):(this.allowOverscrollOnBody(),this.allowEventOnNode(s,document)),t.size>0?this.preventEventOnNode(l,document):this.allowEventOnNode(l,document),e()}))}))}async blockPageScrolling({allowTouchEvents:e,allowWheelEvents:s,source:l=this._host.tagName,sourceNode:d=this._host,targetNode:a=document}={}){c.CURRENT_SCROLL_BLOCKERS[l]||e&&s||(c.CURRENT_SCROLL_BLOCKERS[l]={allowTouchEvents:e,allowWheelEvents:s,sourceNode:d,targetNode:a},await this.applyBlocking(),this.blockedSources.add(l),this.isDebugEnabled&&this.shredditApp?.dispatchEvent(t("faceplate-alert",{name:"scroll-blocker-debug",level:o.debug,message:`Scrolling blocked for "${l}"`,content:n` <dl> <dt>Touch events allowed?</dt> <dd><code>${Boolean(e)}</code></dd> <dt>Wheel events allowed?</dt> <dd><code>${Boolean(s)}</code></dd> </dl> `})))}async unblockPageScrolling(e=this._host.tagName){c.CURRENT_SCROLL_BLOCKERS[e]&&(c.CURRENT_SCROLL_BLOCKERS[e].allowTouchEvents=!0,c.CURRENT_SCROLL_BLOCKERS[e].allowWheelEvents=!0,await this.applyBlocking(),delete c.CURRENT_SCROLL_BLOCKERS[e],this.blockedSources.delete(e),this.isDebugEnabled&&this.shredditApp?.dispatchEvent(t("faceplate-alert",{name:"scroll-blocker-debug",level:o.debug,message:`Scrolling unblocked for "${e}"`})))}hostDisconnected(){for(const e of this.blockedSources)this.unblockPageScrolling(e)}}c.CURRENT_SCROLL_BLOCKERS={};export{c as S};
