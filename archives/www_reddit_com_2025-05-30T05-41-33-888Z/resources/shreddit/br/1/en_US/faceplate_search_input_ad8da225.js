import{_ as e,g as a,m as t,J as r,n as i,e as n,a7 as l}from"./shell-2264602c.js";import{a as o,x as s,Q as c,I as p,l as h}from"./icon-82dd10b4.js";import{T as d,l as v}from"./text-input-7536667a.js";import"./validate-image-b0892d29.js";let u=class extends d{constructor(){super(...arguments),this.hasChips=!1,this.clearable=!0}static get styles(){return[super.styles,o`:host{margin:var(--spacer-2xs) var(--spacer-md);display:inline-flex}label{flex-grow:1}input{background:0 0;border:none;outline:0;width:100%;text-overflow:ellipsis}input::placeholder{color:var(--color-neutral-content-weak)}.label-container,:host([faceplate-validity=invalid]) .label-container,:host([faceplate-validity=valid]) .label-container{border:var(--rem2) solid var(--color-input-border);box-shadow:0 0 0 var(--rem2) transparent}.label-container{align-items:center;box-sizing:border-box;border-radius:var(--radius-full);border:var(--rem2) solid var(--color-input-plain-border);padding:var(--spacer-xs) 0;padding:0 var(--spacer-md)}.label-container-chips{background:var(--color-input-plain)}.label-container:focus-within{background:var(--color-input-plain);border-color:var(--color-neutral-border-strong)}@media (hover:hover){.label-container:focus-within:hover,.label-container:hover{background:var(--color-input-secondary-hover)}}:host .label-container,:host faceplate-form-helper-text:not(.helper-text-without-label-with-trailing){padding-right:var(--spacer-2xs)}.input-container{align-items:center;display:flex;font:var(--font-14-20-regular);position:relative;transform:translateY(0);transition:transform 150ms ease;width:100%;padding:var(--spacer-xs) 0}.leadingIcon{display:inline-flex;font-size:var(--rem16);margin-right:var(--spacer-xs)}.label-container-chips slot[name=chips]{display:inline-flex;margin-right:var(--spacer-xs)}#clearIcon-container{height:var(--rem32);width:var(--rem32);flex-shrink:0}.leadingIcon,:slot[name=chips],:slot[name=clearIcon]{display:flex;flex-shrink:0}`]}render(){return s` <label> <div class="${l({"label-container":!0,"label-container-chips":this.hasChips,"without-label":!0})}"> <span class="leadingIcon">${c({size:p.Small,attributes:{"aria-hidden":"true"}})}</span><slot name="chips" @slotchange="${()=>{this.hasChips=this.chipElements.length>0}}"></slot>${this.inputContainer(s` <input type="text" enterkeyhint="${h(this.enterkeyhint)}" @change="${this.onChange}" @input="${this.onInput}" .value="${v(this.value)}" name="${h(this.name)}" maxlength="${h(this.maxlength)}" placeholder="${h(this.placeholder)}" ?disabled="${this.disabled}" ?required="${this.required}" autocomplete="${h(this.autocomplete)}" inputmode="${h(this.inputmode)}"> `)}<span id="clearIcon-container"> ${this.clearable&&this.value.length>0?s`<slot name="clearIcon"></slot>`:""} </span> ${this.screenReaderContent?s`<faceplate-screen-reader-content> ${this.screenReaderContent} </faceplate-screen-reader-content>`:""} </div> </label> `}};e([a()],u.prototype,"hasChips",void 0),e([t({slot:"chips"})],u.prototype,"chipElements",void 0),e([r(".label-container")],u.prototype,"labelContainer",void 0),e([i({type:String})],u.prototype,"enterkeyhint",void 0),e([i({type:String})],u.prototype,"maxlength",void 0),e([i({type:Boolean})],u.prototype,"clearable",void 0),u=e([n("faceplate-search-input")],u);export{u as F};
