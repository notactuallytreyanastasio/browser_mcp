import{t,_ as e,bv as s,a_ as i,aV as a,e as n,b3 as o,bH as r,E as l,W as c,a as d,n as h,a2 as u,b as p}from"./shell-2264602c.js";import{s as b,x as m}from"./icon-82dd10b4.js";import{b as g,O as v}from"./postFlair-707ffbfa.js";var k;const f=["global/view/discovery_unit","right_rail/click/panel_tab","right_rail/view/panel_tab","post/view/post","post/consume/post","post/click/post","post/click/subreddit","post/click/comments"];let y=k=class extends b{get expandButtonElm(){return this.querySelector('[slot="expand-button"]')}get rightRailContainerElm(){return s(this,"#right-sidebar-container")}get subredditHeaderContainerElm(){return s(this,"shreddit-subreddit-header")?.parentNode}get chainedRelatedPostElm(){return s(this,`#${g}`)}constructor(){super(),this.tabPanelsRef=i(),this.tabSelectCallback=t=>{for(const e of t)if("attributes"===e.type&&"faceplate-tab-selected"===e.attributeName&&e.target.nodeType===Node.ELEMENT_NODE){e.target.hasAttribute("faceplate-tab-selected")&&this.handleTabSelect(e.target)}},this.tabSelectObserver=new MutationObserver(this.tabSelectCallback),this.handlePDPRightRailTelemetry=t=>{const e=t.detail.details||t.detail;if(s=e,!f.includes(o(s)))return;var s;let i;try{const e=t?.target,s=e?.closest("span[event-data]")?.getAttribute("event-data")??e?.closest("reddit-pdp-right-rail-post")?.getAttribute("event-data");i=s?JSON.parse(decodeURIComponent(s)):{}}catch{i={}}e.action_info={...e.action_info,...i.action_info,type:"right_rail"},"post"===e.source&&(e.post={...e.post,...i.post},e.subreddit={...e.subreddit,...i.subreddit})},this.handleTabSelect=t=>{const e=t.slot;e&&this.querySelector(`[slot="tab-panel"] [slot="${e}"] faceplate-partial[loading="programmatic"]`)?.load()},this.handleButtonClick=t=>{t.preventDefault()},this.handleExpandButtonClick=()=>{this.querySelectorAll("ul > li.hidden").forEach((t=>{t.classList.remove("hidden")})),this.querySelectorAll("ul > li hr.hidden").forEach((t=>{t.classList.remove("hidden")})),this.expandButtonElm?.remove()},this.addEventListener("faceplate-track",this.handlePDPRightRailTelemetry),this.addEventListener("track-event",this.handlePDPRightRailTelemetry)}firstUpdated(){this.querySelector('[slot="tabs"]')?.addEventListener("click",this.handleButtonClick),this.expandButtonElm?.addEventListener("click",this.handleExpandButtonClick)}connectedCallback(){super.connectedCallback(),this.tabSelectObserver.observe(this,k.tabSelectObserverOptions)}disconnectedCallback(){super.disconnectedCallback(),this.tabSelectObserver.disconnect(),this.querySelector('[slot="tabs"]')?.removeEventListener?.("click",this.handleButtonClick)}render(){return m` <div> <slot name="tabs" class="block sticky z-1 top-0 bg-neutral-background"></slot> <div ${a(this.tabPanelsRef)} class="pt-sm"> <slot name="tab-panel"></slot> </div> <slot name="expand-button"></slot> </div> `}};y.styles=[t],y.tabSelectObserverOptions={childList:!0,subtree:!0,attributes:!0,attributeFilter:["faceplate-tab-selected"]},y=k=e([n("pdp-right-rail")],y);class C extends r{constructor(t,e){super(t),this.events=new l(this,(()=>this._host)),this.handleMouseClick=(t,e)=>{if(!e.query)return;const s=t.composedPath();for(const i of s){if(!(i instanceof HTMLAnchorElement))continue;const s=i.getAttribute("href");if(s&&(!e.pattern||e.pattern.test(s))){const i=this.getNewUrl(s,e.query);return t.preventDefault(),this.assignLocation(i)}}},this.events.define("click",(t=>{this.handleMouseClick(t,e())}))}getNewUrl(t,e){if(t.startsWith("/")&&(t=window.location.origin+t),!t||!e)return t;const s=new URL(t),i=new URLSearchParams(s.search);for(const[t,s]of e)i.set(t,s);return s.search=i.toString(),s.toString()}assignLocation(t){window.location.assign(t)}}const S=c(d(b));window.addEventListener("afterRoute",(function(){const t=new URL(window.location.href);t.searchParams.has("chainedPosts")&&(t.searchParams.delete("chainedPosts"),window.history.replaceState({},"",t.toString()))}));let w=class extends S{constructor(){super(...arguments),this.postId="",this.chainedPostIds="",this.rightRailPostId="",this.isTranslated=!1,this.consumeTimeoutId=null,this._outboundLinkTrackingController=new v(this,(()=>({pageType:u(),postId:this.postId}))),this._linkClickController=new C(this,(()=>({pattern:/\/comments\/([a-zA-Z0-9_]+)\//,...this.chainedPostIds?{query:new Map([["chainedPosts",this.chainedPostIds]])}:{}})))}connectedCallback(){super.connectedCallback(),this.enableObserver()}disconnectedCallback(){super.disconnectedCallback(),this.disableObserver(),this.clearConsumeTimeout()}clearConsumeTimeout(){this.consumeTimeoutId&&(clearTimeout(this.consumeTimeoutId),this.consumeTimeoutId=null)}observerIsIntersectingCallback(){this.consumeTimeoutId=setTimeout((()=>{this.trackEvent(p({source:"post",action:"consume",noun:"post"}))}),2e3)}observerIsNotIntersectingCallback(){this.clearConsumeTimeout()}createRenderRoot(){return this}};e([h({type:String,attribute:"post-id"})],w.prototype,"postId",void 0),e([h({type:String,attribute:"chained-ids"})],w.prototype,"chainedPostIds",void 0),e([h({type:String,attribute:"right-rail-post-id"})],w.prototype,"rightRailPostId",void 0),e([h({type:Boolean,attribute:"is-translated",reflect:!0})],w.prototype,"isTranslated",void 0),w=e([n("reddit-pdp-right-rail-post")],w);
